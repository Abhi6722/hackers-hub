"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5475],{4137:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.createContext({}),l=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=l(e.components);return r.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,u=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=l(n),m=a,f=d["".concat(u,".").concat(m)]||d[m]||p[m]||i;return n?r.createElement(f,o(o({ref:t},c),{},{components:n})):r.createElement(f,o({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var l=2;l<i;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8448:function(e,t,n){var r=n(7294);t.Z=function(e){var t=e.children,n=e.hidden,a=e.className;return r.createElement("div",{role:"tabpanel",hidden:n,className:a},t)}},7225:function(e,t,n){n.d(t,{Z:function(){return d}});var r=n(7462),a=n(7294),i=n(1048),o=n(2713);var s=function(){var e=(0,a.useContext)(o.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},u=n(3309),l=n(6010),c="tabItem_vU9c";function p(e){var t,n,r,i=e.lazy,o=e.block,p=e.defaultValue,d=e.values,m=e.groupId,f=e.className,h=a.Children.map(e.children,(function(e){if((0,a.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),y=null!=d?d:h.map((function(e){var t=e.props;return{value:t.value,label:t.label}})),b=(0,u.lx)(y,(function(e,t){return e.value===t.value}));if(b.length>0)throw new Error('Docusaurus error: Duplicate values "'+b.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var v=null===p?p:null!=(t=null!=p?p:null==(n=h.find((function(e){return e.props.default})))?void 0:n.props.value)?t:null==(r=h[0])?void 0:r.props.value;if(null!==v&&!y.some((function(e){return e.value===v})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+v+'" but none of its children has the corresponding value. Available values are: '+y.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var k=s(),g=k.tabGroupChoices,w=k.setTabGroupChoices,T=(0,a.useState)(v),N=T[0],j=T[1],O=[],E=(0,u.o5)().blockElementScrollPositionUntilNextRender;if(null!=m){var C=g[m];null!=C&&C!==N&&y.some((function(e){return e.value===C}))&&j(C)}var x=function(e){var t=e.currentTarget,n=O.indexOf(t),r=y[n].value;r!==N&&(E(t),j(r),null!=m&&w(m,r))},R=function(e){var t,n=null;switch(e.key){case"ArrowRight":var r=O.indexOf(e.currentTarget)+1;n=O[r]||O[0];break;case"ArrowLeft":var a=O.indexOf(e.currentTarget)-1;n=O[a]||O[O.length-1]}null==(t=n)||t.focus()};return a.createElement("div",{className:"tabs-container"},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":o},f)},y.map((function(e){var t=e.value,n=e.label;return a.createElement("li",{role:"tab",tabIndex:N===t?0:-1,"aria-selected":N===t,className:(0,l.Z)("tabs__item",c,{"tabs__item--active":N===t}),key:t,ref:function(e){return O.push(e)},onKeyDown:R,onFocus:x,onClick:x},null!=n?n:t)}))),i?(0,a.cloneElement)(h.filter((function(e){return e.props.value===N}))[0],{className:"margin-vert--md"}):a.createElement("div",{className:"margin-vert--md"},h.map((function(e,t){return(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==N})}))))}function d(e){var t=(0,i.Z)();return a.createElement(p,(0,r.Z)({key:String(t)},e))}},2713:function(e,t,n){var r=(0,n(7294).createContext)(void 0);t.Z=r},7453:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return p},toc:function(){return d},default:function(){return f}});var r=n(7462),a=n(3366),i=(n(7294),n(4137)),o=n(7225),s=n(8448),u=["components"],l={id:"retry",title:"Retry Flaky Tests"},c=void 0,p={unversionedId:"retry",id:"retry",isDocsHomePage:!1,title:"Retry Flaky Tests",description:"You can rerun certain tests with the WebdriverIO testrunner that turn out to be unstable due to things like a flaky network or race conditions. (However, it is not recommended to simply increase the rerun rate if tests become unstable!)",source:"@site/docs/Retry.md",sourceDirName:".",slug:"/retry",permalink:"/docs/retry",editUrl:"https://github.com/Abhi6722/hackers-hub/edit/main/website/docs/Retry.md",tags:[],version:"current",frontMatter:{id:"retry",title:"Retry Flaky Tests"},sidebar:"docs",previous:{title:"Organizing Test Suite",permalink:"/docs/organizingsuites"},next:{title:"Watch Test Files",permalink:"/docs/watcher"}},d=[{value:"Rerun suites in Mocha",id:"rerun-suites-in-mocha",children:[],level:2},{value:"Rerun single tests in Jasmine or Mocha",id:"rerun-single-tests-in-jasmine-or-mocha",children:[],level:2},{value:"Rerunning in Cucumber",id:"rerunning-in-cucumber",children:[{value:"Rerun full suites in Cucumber",id:"rerun-full-suites-in-cucumber",children:[],level:3},{value:"Rerun Step Definitions in Cucumber",id:"rerun-step-definitions-in-cucumber",children:[],level:3}],level:2},{value:"Add retries on a per-specfile basis",id:"add-retries-on-a-per-specfile-basis",children:[],level:2}],m={toc:d};function f(e){var t=e.components,n=(0,a.Z)(e,u);return(0,i.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"You can rerun certain tests with the WebdriverIO testrunner that turn out to be unstable due to things like a flaky network or race conditions. (However, it is not recommended to simply increase the rerun rate if tests become unstable!)"),(0,i.kt)("h2",{id:"rerun-suites-in-mocha"},"Rerun suites in Mocha"),(0,i.kt)("p",null,"Since version 3 of Mocha, you can rerun whole test suites (everything inside an ",(0,i.kt)("inlineCode",{parentName:"p"},"describe")," block). If you use Mocha you should favor this retry mechanism instead of the WebdriverIO implementation that only allows you to rerun certain test blocks (everything within an ",(0,i.kt)("inlineCode",{parentName:"p"},"it")," block). In order to use the ",(0,i.kt)("inlineCode",{parentName:"p"},"this.retries()")," method, the suite block ",(0,i.kt)("inlineCode",{parentName:"p"},"describe")," must use an unbound function ",(0,i.kt)("inlineCode",{parentName:"p"},"function(){}")," instead of a fat arrow function ",(0,i.kt)("inlineCode",{parentName:"p"},"() => {}"),", as described in ",(0,i.kt)("a",{parentName:"p",href:"https://mochajs.org/#arrow-functions"},"Mocha docs"),". Using Mocha you can also set a retry count for all specs using ",(0,i.kt)("inlineCode",{parentName:"p"},"mochaOpts.retries")," in your ",(0,i.kt)("inlineCode",{parentName:"p"},"wdio.conf.js"),"."),(0,i.kt)("p",null,"Here is an example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"describe('retries', function () {\n    // Retry all tests in this suite up to 4 times\n    this.retries(4)\n\n    beforeEach(async () => {\n        await browser.url('http://www.yahoo.com')\n    })\n\n    it('should succeed on the 3rd try', async function () {\n        // Specify this test to only retry up to 2 times\n        this.retries(2)\n        console.log('run')\n        await expect($('.foo')).toBeDisplayed()\n    })\n})\n")),(0,i.kt)("h2",{id:"rerun-single-tests-in-jasmine-or-mocha"},"Rerun single tests in Jasmine or Mocha"),(0,i.kt)("p",null,"To rerun a certain test block you can just apply the number of reruns as last parameter after the test block function:"),(0,i.kt)(o.Z,{defaultValue:"mocha",values:[{label:"Mocha",value:"mocha"},{label:"Jasmine",value:"jasmine"}],mdxType:"Tabs"},(0,i.kt)(s.Z,{value:"mocha",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"describe('my flaky app', () => {\n    /**\n     * spec that runs max 4 times (1 actual run + 3 reruns)\n     */\n    it('should rerun a test at least 3 times', async function () {\n        console.log(this.wdioRetries) // returns number of retries\n        // ...\n    }, 3)\n})\n")),(0,i.kt)("p",null,"The same works for hooks too:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"describe('my flaky app', () => {\n    /**\n     * hook that runs max 2 times (1 actual run + 1 rerun)\n     */\n    beforeEach(async () => {\n        // ...\n    }, 1)\n\n    // ...\n})\n"))),(0,i.kt)(s.Z,{value:"jasmine",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"describe('my flaky app', () => {\n    /**\n     * spec that runs max 4 times (1 actual run + 3 reruns)\n     */\n    it('should rerun a test at least 3 times', async function () {\n        console.log(this.wdioRetries) // returns number of retries\n        // ...\n    }, jasmine.DEFAULT_TIMEOUT_INTERVAL, 3)\n})\n")),(0,i.kt)("p",null,"The same works for hooks too:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"describe('my flaky app', () => {\n    /**\n     * hook that runs max 2 times (1 actual run + 1 rerun)\n     */\n    beforeEach(async () => {\n        // ...\n    }, jasmine.DEFAULT_TIMEOUT_INTERVAL, 1)\n\n    // ...\n})\n")),(0,i.kt)("p",null,"If you are using Jasmine, the second parameter is reserved for timeout. To apply a retry parameter you need to set the timeout to its default value ",(0,i.kt)("inlineCode",{parentName:"p"},"jasmine.DEFAULT_TIMEOUT_INTERVAL")," and then apply your retry count."))),(0,i.kt)("p",null,"This retry mechanism only allows to retry single hooks or test blocks. If your test is accompanied with a hook to set up your application, this hook is not being run. ",(0,i.kt)("a",{parentName:"p",href:"https://mochajs.org/#retry-tests"},"Mocha offers")," native test retries that provide this behavior while Jasmine doesn't. You can access the number of executed retries in the ",(0,i.kt)("inlineCode",{parentName:"p"},"afterTest")," hook."),(0,i.kt)("h2",{id:"rerunning-in-cucumber"},"Rerunning in Cucumber"),(0,i.kt)("h3",{id:"rerun-full-suites-in-cucumber"},"Rerun full suites in Cucumber"),(0,i.kt)("p",null,"For cucumber >=6 you can provide the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/cucumber/cucumber-js/blob/master/docs/cli.md#retry-failing-tests"},(0,i.kt)("inlineCode",{parentName:"a"},"retry"))," configuration option along with a ",(0,i.kt)("inlineCode",{parentName:"p"},"retryTagFilter")," optional parameter to have all or some of your failing scenarios get additional retries until succeeded. For this feature to work you need to set the ",(0,i.kt)("inlineCode",{parentName:"p"},"scenarioLevelReporter")," to ",(0,i.kt)("inlineCode",{parentName:"p"},"true"),"."),(0,i.kt)("h3",{id:"rerun-step-definitions-in-cucumber"},"Rerun Step Definitions in Cucumber"),(0,i.kt)("p",null,"To define a rerun rate for a certain step definitions just apply a retry option to it, like:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"module.exports = function () {\n    /**\n     * step definition that runs max 3 times (1 actual run + 2 reruns)\n     */\n    this.Given(/^some step definition$/, { wrapperOptions: { retry: 2 } }, async () => {\n        // ...\n    })\n    // ...\n})\n")),(0,i.kt)("p",null,"Reruns can only be defined in your step definitions file, never in your feature file."),(0,i.kt)("h2",{id:"add-retries-on-a-per-specfile-basis"},"Add retries on a per-specfile basis"),(0,i.kt)("p",null,"Previously, only test- and suite-level retries were available, which are fine in most cases."),(0,i.kt)("p",null,"But in any tests which involve state (such as on a server or in a database) the state may be left invalid after the first test failure. Any subsequent retries may have no chance of passing, due to the invalid state they would start with."),(0,i.kt)("p",null,"A new ",(0,i.kt)("inlineCode",{parentName:"p"},"browser")," instance is created for each specfile, which makes this an ideal place to hook and setup any other states (server, databases). Retries on this level mean that the whole setup process will simply be repeated, just as if it were for a new specfile."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"module.exports = function () {\n    /**\n     * The number of times to retry the entire specfile when it fails as a whole\n     */\n    specFileRetries: 1,\n    /**\n     * Delay in seconds between the spec file retry attempts\n     */\n    specFileRetriesDelay: 0,\n    /**\n     * Retried specfiles are inserted at the beginning of the queue and retried immediately\n     */\n    specFileRetriesDeferred: false\n}\n")))}f.isMDXComponent=!0}}]);