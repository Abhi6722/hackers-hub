"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5370],{4137:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),c=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(i.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(n),m=a,k=p["".concat(i,".").concat(m)]||p[m]||d[m]||o;return n?r.createElement(k,l(l({ref:t},u),{},{components:n})):r.createElement(k,l({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=p;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:a,l[1]=s;for(var c=2;c<o;c++)l[c]=n[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},8448:function(e,t,n){var r=n(7294);t.Z=function(e){var t=e.children,n=e.hidden,a=e.className;return r.createElement("div",{role:"tabpanel",hidden:n,className:a},t)}},7225:function(e,t,n){n.d(t,{Z:function(){return p}});var r=n(7462),a=n(7294),o=n(1048),l=n(2713);var s=function(){var e=(0,a.useContext)(l.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},i=n(3309),c=n(6010),u="tabItem_vU9c";function d(e){var t,n,r,o=e.lazy,l=e.block,d=e.defaultValue,p=e.values,m=e.groupId,k=e.className,h=a.Children.map(e.children,(function(e){if((0,a.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),v=null!=p?p:h.map((function(e){var t=e.props;return{value:t.value,label:t.label}})),b=(0,i.lx)(v,(function(e,t){return e.value===t.value}));if(b.length>0)throw new Error('Docusaurus error: Duplicate values "'+b.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var f=null===d?d:null!=(t=null!=d?d:null==(n=h.find((function(e){return e.props.default})))?void 0:n.props.value)?t:null==(r=h[0])?void 0:r.props.value;if(null!==f&&!v.some((function(e){return e.value===f})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+f+'" but none of its children has the corresponding value. Available values are: '+v.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var g=s(),y=g.tabGroupChoices,w=g.setTabGroupChoices,N=(0,a.useState)(f),x=N[0],T=N[1],j=[],O=(0,i.o5)().blockElementScrollPositionUntilNextRender;if(null!=m){var E=y[m];null!=E&&E!==x&&v.some((function(e){return e.value===E}))&&T(E)}var C=function(e){var t=e.currentTarget,n=j.indexOf(t),r=v[n].value;r!==x&&(O(t),T(r),null!=m&&w(m,r))},P=function(e){var t,n=null;switch(e.key){case"ArrowRight":var r=j.indexOf(e.currentTarget)+1;n=j[r]||j[0];break;case"ArrowLeft":var a=j.indexOf(e.currentTarget)-1;n=j[a]||j[j.length-1]}null==(t=n)||t.focus()};return a.createElement("div",{className:"tabs-container"},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,c.Z)("tabs",{"tabs--block":l},k)},v.map((function(e){var t=e.value,n=e.label;return a.createElement("li",{role:"tab",tabIndex:x===t?0:-1,"aria-selected":x===t,className:(0,c.Z)("tabs__item",u,{"tabs__item--active":x===t}),key:t,ref:function(e){return j.push(e)},onKeyDown:P,onFocus:C,onClick:C},null!=n?n:t)}))),o?(0,a.cloneElement)(h.filter((function(e){return e.props.value===x}))[0],{className:"margin-vert--md"}):a.createElement("div",{className:"margin-vert--md"},h.map((function(e,t){return(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==x})}))))}function p(e){var t=(0,o.Z)();return a.createElement(d,(0,r.Z)({key:String(t)},e))}},2713:function(e,t,n){var r=(0,n(7294).createContext)(void 0);t.Z=r},1767:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return c},contentTitle:function(){return u},metadata:function(){return d},toc:function(){return p},default:function(){return k}});var r=n(7462),a=n(3366),o=(n(7294),n(4137)),l=n(7225),s=n(8448),i=["components"],c={id:"respond",title:"respond",custom_edit_url:"https://github.com/Abhi6722/hackers-hub/edit/main/packages/webdriverio/src/commands/mock/respond.ts"},u=void 0,d={unversionedId:"api/mock/respond",id:"api/mock/respond",isDocsHomePage:!1,title:"respond",description:"Always respond with same overwrite.",source:"@site/docs/api/mock/_respond.md",sourceDirName:"api/mock",slug:"/api/mock/respond",permalink:"/docs/api/mock/respond",editUrl:"https://github.com/Abhi6722/hackers-hub/edit/main/packages/webdriverio/src/commands/mock/respond.ts",tags:[],version:"current",frontMatter:{id:"respond",title:"respond",custom_edit_url:"https://github.com/Abhi6722/hackers-hub/edit/main/packages/webdriverio/src/commands/mock/respond.ts"},sidebar:"api",previous:{title:"clear",permalink:"/docs/api/mock/clear"},next:{title:"respondOnce",permalink:"/docs/api/mock/respondOnce"}},p=[{value:"Usage",id:"usage",children:[],level:5},{value:"Parameters",id:"parameters",children:[],level:5},{value:"Example",id:"example",children:[],level:5}],m={toc:p};function k(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Always respond with same overwrite."),(0,o.kt)("h5",{id:"usage"},"Usage"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"mock.respond(overwrites, { header, statusCode, fetchResponse })\n")),(0,o.kt)("h5",{id:"parameters"},"Parameters"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Name"),(0,o.kt)("th",{parentName:"tr",align:null},"Type"),(0,o.kt)("th",{parentName:"tr",align:null},"Details"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("code",null,(0,o.kt)("var",null,"overwrites"))),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("code",null,"MockOverwrite")),(0,o.kt)("td",{parentName:"tr",align:null},"payload to overwrite the response")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("code",null,(0,o.kt)("var",null,"params")),(0,o.kt)("br",null),(0,o.kt)("span",{class:"label labelWarning"},"optional")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("code",null,"MockResponseParams")),(0,o.kt)("td",{parentName:"tr",align:null},"additional respond parameters to overwrite")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("code",null,(0,o.kt)("var",null,"params.header")),(0,o.kt)("br",null),(0,o.kt)("span",{class:"label labelWarning"},"optional")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("code",null,"Object")),(0,o.kt)("td",{parentName:"tr",align:null},"overwrite specific headers")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("code",null,(0,o.kt)("var",null,"params.statusCode")),(0,o.kt)("br",null),(0,o.kt)("span",{class:"label labelWarning"},"optional")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("code",null,"Number")),(0,o.kt)("td",{parentName:"tr",align:null},"overwrite response status code")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("code",null,(0,o.kt)("var",null,"params.fetchResponse")),(0,o.kt)("br",null),(0,o.kt)("span",{class:"label labelWarning"},"optional")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("code",null,"Boolean")),(0,o.kt)("td",{parentName:"tr",align:null},"fetch real response before responding with mocked data")))),(0,o.kt)("h5",{id:"example"},"Example"),(0,o.kt)(l.Z,{defaultValue:"async",className:"runtime",values:[{label:"Asynchronous Mode",value:"async"},{label:"Synchronous Mode",value:"sync"}],mdxType:"Tabs"},(0,o.kt)(s.Z,{value:"async",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="respond.js"',title:'"respond.js"'},"it('should demonstrate response overwrite with static data', async () => {\n    const mock = await browser.mock('https://todo-backend-express-knex.herokuapp.com/', {\n        method: 'get'\n    })\n\n    mock.respond([{\n        title: 'Injected (non) completed Todo',\n        order: null,\n        completed: false\n    }, {\n        title: 'Injected completed Todo',\n        order: null,\n        completed: true\n    }], {\n        statusCode: 200,\n        fetchResponse: true // default\n    })\n\n    await browser.url('https://todobackend.com/client/index.html?https://todo-backend-express-knex.herokuapp.com/')\n\n    await $('#todo-list li').waitForExist()\n    console.log(await $$('#todo-list li').map(el => el.getText()))\n    // outputs: \"[ 'Injected (non) completed Todo', 'Injected completed Todo' ]\"\n})\n\nit('should demonstrate response overwrite with dynamic data', async () => {\n    const mock = await browser.mock('https://todo-backend-express-knex.herokuapp.com/')\n\n    mock.respond((request) => {\n        if (request.body.username === 'test') {\n            return { ...request.body, foo: 'bar' }\n        }\n        return request.body\n    }, {\n        statusCode: () => 200,\n        headers: () => ({ foo: 'bar }),\n        fetchResponse: false // do not fetch real response\n    })\n})\n"))),(0,o.kt)(s.Z,{value:"sync",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="respond.js"',title:'"respond.js"'},"it('should demonstrate response overwrite with static data', () => {\n    const mock = browser.mock('https://todo-backend-express-knex.herokuapp.com/', {\n        method: 'get'\n    })\n\n    mock.respond([{\n        title: 'Injected (non) completed Todo',\n        order: null,\n        completed: false\n    }, {\n        title: 'Injected completed Todo',\n        order: null,\n        completed: true\n    }], {\n        statusCode: 200,\n        fetchResponse: true // default\n    })\n\n    browser.url('https://todobackend.com/client/index.html?https://todo-backend-express-knex.herokuapp.com/')\n\n    $('#todo-list li').waitForExist()\n    console.log($$('#todo-list li').map(el => el.getText()))\n    // outputs: \"[ 'Injected (non) completed Todo', 'Injected completed Todo' ]\"\n})\n\nit('should demonstrate response overwrite with dynamic data', () => {\n    const mock = browser.mock('https://todo-backend-express-knex.herokuapp.com/')\n\n    mock.respond((request) => {\n        if (request.body.username === 'test') {\n            return { ...request.body, foo: 'bar' }\n        }\n        return request.body\n    }, {\n        statusCode: () => 200,\n        headers: () => ({ foo: 'bar }),\n        fetchResponse: false // do not fetch real response\n    })\n})\n")),(0,o.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Synchronous Mode will depcrecated with Node.js v16. With an update to the\nunderlying Chromium version it became technically impossible to provide the\nsame synchronous behavior. We recommend to start transition to asynchronous\ncommand execution. For more information, see our ",(0,o.kt)("a",{href:"https://github.com/webdriverio/webdriverio/discussions/6702"},"RFC"),"."))))))}k.isMDXComponent=!0}}]);