"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8484],{4137:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return d}});var a=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=a.createContext({}),p=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=p(e.components);return a.createElement(l.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),m=p(t),d=o,y=m["".concat(l,".").concat(d)]||m[d]||c[d]||r;return t?a.createElement(y,i(i({ref:n},u),{},{components:t})):a.createElement(y,i({ref:n},u))}));function d(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=t.length,i=new Array(r);i[0]=m;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var p=2;p<r;p++)i[p]=t[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},8448:function(e,n,t){var a=t(7294);n.Z=function(e){var n=e.children,t=e.hidden,o=e.className;return a.createElement("div",{role:"tabpanel",hidden:t,className:o},n)}},7225:function(e,n,t){t.d(n,{Z:function(){return m}});var a=t(7462),o=t(7294),r=t(1048),i=t(2713);var s=function(){var e=(0,o.useContext)(i.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},l=t(3309),p=t(6010),u="tabItem_vU9c";function c(e){var n,t,a,r=e.lazy,i=e.block,c=e.defaultValue,m=e.values,d=e.groupId,y=e.className,f=o.Children.map(e.children,(function(e){if((0,o.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),v=null!=m?m:f.map((function(e){var n=e.props;return{value:n.value,label:n.label}})),g=(0,l.lx)(v,(function(e,n){return e.value===n.value}));if(g.length>0)throw new Error('Docusaurus error: Duplicate values "'+g.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var k=null===c?c:null!=(n=null!=c?c:null==(t=f.find((function(e){return e.props.default})))?void 0:t.props.value)?n:null==(a=f[0])?void 0:a.props.value;if(null!==k&&!v.some((function(e){return e.value===k})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+k+'" but none of its children has the corresponding value. Available values are: '+v.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var b=s(),h=b.tabGroupChoices,w=b.setTabGroupChoices,N=(0,o.useState)(k),C=N[0],T=N[1],j=[],x=(0,l.o5)().blockElementScrollPositionUntilNextRender;if(null!=d){var O=h[d];null!=O&&O!==C&&v.some((function(e){return e.value===O}))&&T(O)}var I=function(e){var n=e.currentTarget,t=j.indexOf(n),a=v[t].value;a!==C&&(x(n),T(a),null!=d&&w(d,a))},Z=function(e){var n,t=null;switch(e.key){case"ArrowRight":var a=j.indexOf(e.currentTarget)+1;t=j[a]||j[0];break;case"ArrowLeft":var o=j.indexOf(e.currentTarget)-1;t=j[o]||j[j.length-1]}null==(n=t)||n.focus()};return o.createElement("div",{className:"tabs-container"},o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,p.Z)("tabs",{"tabs--block":i},y)},v.map((function(e){var n=e.value,t=e.label;return o.createElement("li",{role:"tab",tabIndex:C===n?0:-1,"aria-selected":C===n,className:(0,p.Z)("tabs__item",u,{"tabs__item--active":C===n}),key:n,ref:function(e){return j.push(e)},onKeyDown:Z,onFocus:I,onClick:I},null!=t?t:n)}))),r?(0,o.cloneElement)(f.filter((function(e){return e.props.value===C}))[0],{className:"margin-vert--md"}):o.createElement("div",{className:"margin-vert--md"},f.map((function(e,n){return(0,o.cloneElement)(e,{key:n,hidden:e.props.value!==C})}))))}function m(e){var n=(0,r.Z)();return o.createElement(c,(0,a.Z)({key:String(n)},e))}},2713:function(e,n,t){var a=(0,t(7294).createContext)(void 0);n.Z=a},5025:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return p},contentTitle:function(){return u},metadata:function(){return c},toc:function(){return m},default:function(){return y}});var a=t(7462),o=t(3366),r=(t(7294),t(4137)),i=t(7225),s=t(8448),l=["components"],p={id:"typescript",title:"TypeScript Setup"},u=void 0,c={unversionedId:"typescript",id:"typescript",isDocsHomePage:!1,title:"TypeScript Setup",description:"You can write tests using TypeScript to get autocompletion and type safety.",source:"@site/docs/TypeScript.md",sourceDirName:".",slug:"/typescript",permalink:"/docs/typescript",editUrl:"https://github.com/Abhi6722/hackers-hub/edit/main/website/docs/TypeScript.md",tags:[],version:"current",frontMatter:{id:"typescript",title:"TypeScript Setup"},sidebar:"docs",previous:{title:"Babel Setup",permalink:"/docs/babel"},next:{title:"Proxy Setup",permalink:"/docs/proxy"}},m=[{value:"Configuration",id:"configuration",children:[],level:2},{value:"Framework Setup",id:"framework-setup",children:[],level:2},{value:"Framework Types",id:"framework-types",children:[],level:2},{value:"Services",id:"services",children:[],level:2},{value:"Type Definitions",id:"type-definitions",children:[],level:2},{value:"Adding Custom Commands",id:"adding-custom-commands",children:[],level:2},{value:"Tips and Hints",id:"tips-and-hints",children:[{value:"tsconfig.json example",id:"tsconfigjson-example",children:[],level:3},{value:"Compile &amp; Lint",id:"compile--lint",children:[],level:3}],level:2}],d={toc:m};function y(e){var n=e.components,t=(0,o.Z)(e,l);return(0,r.kt)("wrapper",(0,a.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"You can write tests using ",(0,r.kt)("a",{parentName:"p",href:"http://www.typescriptlang.org"},"TypeScript")," to get autocompletion and type safety."),(0,r.kt)("p",null,"You will need ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/microsoft/TypeScript"},(0,r.kt)("inlineCode",{parentName:"a"},"typescript"))," and ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/TypeStrong/ts-node"},(0,r.kt)("inlineCode",{parentName:"a"},"ts-node"))," installed as ",(0,r.kt)("inlineCode",{parentName:"p"},"devDependencies"),". WebdriverIO will automatically detect if these dependencies are installed and will compile your config and tests for you. If you need to configure how ts-node runs please use the environment variables for ",(0,r.kt)("a",{parentName:"p",href:"/docs/typescript"},"ts-node")," or use wdio config's ",(0,r.kt)("a",{parentName:"p",href:"/docs/configurationfile"},"autoCompileOpts section"),"."),(0,r.kt)(i.Z,{defaultValue:"npm",groupId:"npm2yarn",values:[{label:"npm",value:"npm"},{label:"Yarn",value:"yarn"}],mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"npm",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ npm install typescript ts-node --save-dev\n"))),(0,r.kt)(s.Z,{value:"yarn",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ yarn add typescript ts-node --dev\n")))),(0,r.kt)("p",null,"The minimum TypeScript version is ",(0,r.kt)("inlineCode",{parentName:"p"},"v4.0.5"),"."),(0,r.kt)("h2",{id:"configuration"},"Configuration"),(0,r.kt)("p",null,"You can provide custom ",(0,r.kt)("inlineCode",{parentName:"p"},"ts-node")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"tsconfig-paths")," options through your ",(0,r.kt)("inlineCode",{parentName:"p"},"wdio.conf.ts"),", e.g.:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="wdio.conf.ts"',title:'"wdio.conf.ts"'},"export const config = {\n    // ...\n    autoCompileOpts: {\n        autoCompile: true,\n        // see https://github.com/TypeStrong/ts-node#cli-and-programmatic-options\n        // for all available options\n        tsNodeOpts: {\n            transpileOnly: true,\n            project: 'tsconfig.json'\n        },\n        // tsconfig-paths is only used if \"tsConfigPathsOpts\" are provided, if you\n        // do please make sure \"tsconfig-paths\" is installed as dependency\n        tsConfigPathsOpts: {\n            baseUrl: './'\n        }\n    }\n}\n")),(0,r.kt)("p",null,"If you don't want to use WebdriverIO's internal transpiler functionality you can create your own ",(0,r.kt)("inlineCode",{parentName:"p"},"entrypoint.js")," file where ",(0,r.kt)("inlineCode",{parentName:"p"},"ts-node")," is defined manually:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="entrypoint.js"',title:'"entrypoint.js"'},"require('ts-node').register(\n    {\n        transpileOnly: false,\n        files: true,\n        project: \"./tsconfig.json\"\n    }\n)\nmodule.exports = require('./configs/wdio.conf')\n")),(0,r.kt)("p",null,"In this case you have to pass ",(0,r.kt)("inlineCode",{parentName:"p"},"--no-autoCompileOpts.autoCompile")," as parameter to the ",(0,r.kt)("inlineCode",{parentName:"p"},"wdio")," command to disable auto compiling, e.g.:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"npx wdio run ./entrypoint.js --no-autoCompileOpts.autoCompile\n")),(0,r.kt)("h2",{id:"framework-setup"},"Framework Setup"),(0,r.kt)("p",null,"And your ",(0,r.kt)("inlineCode",{parentName:"p"},"tsconfig.json")," needs the following:"),(0,r.kt)(i.Z,{defaultValue:"async",className:"runtime",values:[{label:"Async Mode",value:"async"},{label:"Sync Mode",value:"sync"}],mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"sync",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="tsconfig.json"',title:'"tsconfig.json"'},'{\n    "compilerOptions": {\n        "types": ["node", "webdriverio/sync"]\n    }\n}\n')),(0,r.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Synchronous Mode will depcrecated with Node.js v16. With an update to the\nunderlying Chromium version it became technically impossible to provide the\nsame synchronous behavior. We recommend to start transition to asynchronous\ncommand execution. For more information, see our ",(0,r.kt)("a",{href:"https://github.com/webdriverio/webdriverio/discussions/6702"},"RFC"),".")))),(0,r.kt)(s.Z,{value:"async",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="tsconfig.json"',title:'"tsconfig.json"'},'{\n    "compilerOptions": {\n        "types": ["node", "webdriverio/async"]\n    }\n}\n')))),(0,r.kt)("p",null,"Please avoid importing ",(0,r.kt)("inlineCode",{parentName:"p"},"webdriverio")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"@wdio/sync")," explicitly.\n",(0,r.kt)("inlineCode",{parentName:"p"},"WebdriverIO")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"WebDriver")," types are accessible from anywhere once added to ",(0,r.kt)("inlineCode",{parentName:"p"},"types")," in ",(0,r.kt)("inlineCode",{parentName:"p"},"tsconfig.json"),". If you use additional WebdriverIO services, plugins or the ",(0,r.kt)("inlineCode",{parentName:"p"},"devtools")," automation package, please also add them to the ",(0,r.kt)("inlineCode",{parentName:"p"},"types")," list as many provide additional typings."),(0,r.kt)("h2",{id:"framework-types"},"Framework Types"),(0,r.kt)("p",null,"Depending on the framework you use, you will need to add the types for that framework to your ",(0,r.kt)("inlineCode",{parentName:"p"},"tsconfig.json")," types property, as well as install its type definitions. This is especially important if you want to have type support for the built-in assertion library ",(0,r.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/expect-webdriverio"},(0,r.kt)("inlineCode",{parentName:"a"},"expect-webdriverio")),"."),(0,r.kt)("p",null,"For instance, if you decide to use the Mocha framework, you need to install ",(0,r.kt)("inlineCode",{parentName:"p"},"@types/mocha")," and add it like this to have all types globally available:"),(0,r.kt)(i.Z,{defaultValue:"mocha",values:[{label:"Mocha",value:"mocha"},{label:"Jasmine",value:"jasmine"},{label:"Cucumber",value:"cucumber"}],mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"mocha",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="tsconfig.json"',title:'"tsconfig.json"'},'{\n    "compilerOptions": {\n        "types": ["node", "webdriverio/sync", "@wdio/mocha-framework"]\n    }\n}\n'))),(0,r.kt)(s.Z,{value:"jasmine",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="tsconfig.json"',title:'"tsconfig.json"'},'{\n    "compilerOptions": {\n        "types": ["node", "webdriverio/sync", "@wdio/jasmine-framework"]\n    }\n}\n'))),(0,r.kt)(s.Z,{value:"cucumber",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="tsconfig.json"',title:'"tsconfig.json"'},'{\n    "compilerOptions": {\n        "types": ["node", "webdriverio/sync", "@wdio/cucumber-framework"]\n    }\n}\n')))),(0,r.kt)("h2",{id:"services"},"Services"),(0,r.kt)("p",null,"If you use services that add commands to the browser scope you also need to include these into your ",(0,r.kt)("inlineCode",{parentName:"p"},"tsconfig.json"),". For example if you use the ",(0,r.kt)("inlineCode",{parentName:"p"},"@wdio/devtools-service")," ensure that you add it to the ",(0,r.kt)("inlineCode",{parentName:"p"},"types")," as well, e.g.:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="tsconfig.json"',title:'"tsconfig.json"'},'{\n    "compilerOptions": {\n        "types": [\n            "node",\n            "webdriverio/sync",\n            "@wdio/mocha-framework",\n            "@wdio/devtools-service"\n        ]\n    }\n}\n')),(0,r.kt)("p",null,"Adding services and reporters to your TypeScript config also strengthen the type safety of your WebdriverIO config file."),(0,r.kt)("h2",{id:"type-definitions"},"Type Definitions"),(0,r.kt)("p",null,"When running WebdriverIO commands all properties are usually typed so that you don't have to deal with importing additional types. However there are cases where you want to define variables upfront. To ensure that these are type safe you can use all types defined in the ",(0,r.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/@wdio/types"},(0,r.kt)("inlineCode",{parentName:"a"},"@wdio/types"))," package. For example if you like to define the remote option for ",(0,r.kt)("inlineCode",{parentName:"p"},"webdriverio")," you can do:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"import type { Capabilities } from '@wdio/types'\n\nconst config: Capabilities.WebdriverIO = {\n    hostname: 'http://localhost',\n    port: '4444' // Error: Type 'string' is not assignable to type 'number'.ts(2322)\n    capabilities: {\n        browserName: 'chrome'\n    }\n}\n")),(0,r.kt)("h2",{id:"adding-custom-commands"},"Adding Custom Commands"),(0,r.kt)("p",null,"With TypeScript, it's easy to extend WebdriverIO interfaces. Add types to your ",(0,r.kt)("a",{parentName:"p",href:"/docs/customcommands"},"custom commands")," like this:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Create a type definition file (e.g., ",(0,r.kt)("inlineCode",{parentName:"p"},"./src/types/wdio.d.ts"),")")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"a. If using a module-style type definition file (using import/export and ",(0,r.kt)("inlineCode",{parentName:"p"},"declare global WebdriverIO")," in the type definition file), make sure to include the file path in the ",(0,r.kt)("inlineCode",{parentName:"p"},"tsconfig.json")," ",(0,r.kt)("inlineCode",{parentName:"p"},"include")," property."),(0,r.kt)("p",{parentName:"li"},"b.  If using ambient-style type definition files (no import/export in type definition files and ",(0,r.kt)("inlineCode",{parentName:"p"},"declare namespace WebdriverIO")," for custom commands), make sure the ",(0,r.kt)("inlineCode",{parentName:"p"},"tsconfig.json")," does ",(0,r.kt)("em",{parentName:"p"},"not")," contain any ",(0,r.kt)("inlineCode",{parentName:"p"},"include")," section, since this will cause all type definition files not listed in the ",(0,r.kt)("inlineCode",{parentName:"p"},"include")," section to not be recognized by typescript."))),(0,r.kt)(i.Z,{defaultValue:"modules",values:[{label:"Modules (using import/export)",value:"modules"},{label:"Ambient Type Definitions (no tsconfig include)",value:"ambient"}],mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"modules",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="tsconfig.json"',title:'"tsconfig.json"'},'{\n    "compilerOptions": { ... },\n    "include": [\n        "./test/**/*.ts",\n        "./src/types/**/*.ts"\n    ]\n}\n'))),(0,r.kt)(s.Z,{value:"ambient",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="tsconfig.json"',title:'"tsconfig.json"'},'{\n    "compilerOptions": { ... }\n}\n')))),(0,r.kt)("ol",{start:3},(0,r.kt)("li",{parentName:"ol"},"Add definitions for your commands according to your execution mode.")),(0,r.kt)(i.Z,{defaultValue:"modules",values:[{label:"Modules (using import/export)",value:"modules"},{label:"Ambient Type Definitions",value:"ambient"}],mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"modules",mdxType:"TabItem"},(0,r.kt)(i.Z,{defaultValue:"async",values:[{label:"Sync",value:"sync"},{label:"Async",value:"async"}],mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"sync",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"declare global {\n    namespace WebdriverIO {\n        interface Browser {\n            browserCustomCommand: (arg: any) => void\n        }\n\n        interface MultiRemoteBrowser {\n            browserCustomCommand: (arg: any) => void\n        }\n\n        interface Element {\n            elementCustomCommand: (arg: any) => number\n        }\n    }\n}\n"))),(0,r.kt)(s.Z,{value:"async",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"declare global {\n    namespace WebdriverIO {\n        interface Browser {\n            browserCustomCommand: (arg: any) => Promise<void>\n        }\n\n        interface MultiRemoteBrowser {\n            browserCustomCommand: (arg: any) => Promise<void>\n        }\n\n        interface Element {\n            elementCustomCommand: (arg: any) => Promise<number>\n        }\n    }\n}\n"))))),(0,r.kt)(s.Z,{value:"ambient",mdxType:"TabItem"},(0,r.kt)(i.Z,{defaultValue:"async",values:[{label:"Sync",value:"sync"},{label:"Async",value:"async"}],mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"sync",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"declare namespace WebdriverIO {\n    interface Browser {\n        browserCustomCommand: (arg: any) => void\n    }\n\n    interface MultiRemoteBrowser {\n        browserCustomCommand: (arg: any) => void\n    }\n\n    interface Element {\n        elementCustomCommand: (arg: any) => number\n    }\n}\n"))),(0,r.kt)(s.Z,{value:"async",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"declare namespace WebdriverIO {\n    interface Browser {\n        browserCustomCommand: (arg: any) => Promise<void>\n    }\n\n    interface MultiRemoteBrowser {\n        browserCustomCommand: (arg: any) => Promise<void>\n    }\n\n    interface Element {\n        elementCustomCommand: (arg: any) => Promise<number>\n    }\n}\n")))))),(0,r.kt)("h2",{id:"tips-and-hints"},"Tips and Hints"),(0,r.kt)("h3",{id:"tsconfigjson-example"},"tsconfig.json example"),(0,r.kt)(i.Z,{defaultValue:"modules",values:[{label:"Modules (using import/export)",value:"modules"},{label:"Ambient Type Definitions (no tsconfig include)",value:"ambient"}],mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"modules",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "compilerOptions": {\n    "outDir": "./.tsbuild/",\n    "sourceMap": false,\n    "target": "es2019",\n    "module": "commonjs",\n    "removeComments": true,\n    "noImplicitAny": true,\n    "strictPropertyInitialization": true,\n    "strictNullChecks": true,\n    "types": [\n      "node",\n      "webdriverio/sync",\n      "@wdio/mocha-framework"\n    ]\n  },\n  "include": [\n    "./test/**/*.ts",\n    "./src/types/**/*.ts"\n  ]\n}\n'))),(0,r.kt)(s.Z,{value:"ambient",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "compilerOptions": {\n    "outDir": "./.tsbuild/",\n    "sourceMap": false,\n    "target": "es2019",\n    "module": "commonjs",\n    "removeComments": true,\n    "noImplicitAny": true,\n    "strictPropertyInitialization": true,\n    "strictNullChecks": true,\n    "types": [\n      "node",\n      "webdriverio/sync",\n      "@wdio/mocha-framework"\n    ]\n  }\n}\n')))),(0,r.kt)("h3",{id:"compile--lint"},"Compile & Lint"),(0,r.kt)("p",null,"To be entirely safe, you may consider following the best practices: compile your code with TypeScript compiler (run ",(0,r.kt)("inlineCode",{parentName:"p"},"tsc")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"npx tsc"),") and have ",(0,r.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/@typescript-eslint/eslint-plugin"},"eslint")," running on ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/typicode/husky"},"pre-commit hook"),"."))}y.isMDXComponent=!0}}]);