"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5440],{4137:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return d}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),m=p(n),d=a,h=m["".concat(l,".").concat(d)]||m[d]||c[d]||i;return n?r.createElement(h,o(o({ref:t},u),{},{components:n})):r.createElement(h,o({ref:t},u))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var p=2;p<i;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8448:function(e,t,n){var r=n(7294);t.Z=function(e){var t=e.children,n=e.hidden,a=e.className;return r.createElement("div",{role:"tabpanel",hidden:n,className:a},t)}},7225:function(e,t,n){n.d(t,{Z:function(){return m}});var r=n(7462),a=n(7294),i=n(1048),o=n(2713);var s=function(){var e=(0,a.useContext)(o.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},l=n(3309),p=n(6010),u="tabItem_vU9c";function c(e){var t,n,r,i=e.lazy,o=e.block,c=e.defaultValue,m=e.values,d=e.groupId,h=e.className,v=a.Children.map(e.children,(function(e){if((0,a.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),k=null!=m?m:v.map((function(e){var t=e.props;return{value:t.value,label:t.label}})),f=(0,l.lx)(k,(function(e,t){return e.value===t.value}));if(f.length>0)throw new Error('Docusaurus error: Duplicate values "'+f.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var g=null===c?c:null!=(t=null!=c?c:null==(n=v.find((function(e){return e.props.default})))?void 0:n.props.value)?t:null==(r=v[0])?void 0:r.props.value;if(null!==g&&!k.some((function(e){return e.value===g})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+g+'" but none of its children has the corresponding value. Available values are: '+k.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var N=s(),b=N.tabGroupChoices,w=N.setTabGroupChoices,y=(0,a.useState)(g),C=y[0],j=y[1],O=[],x=(0,l.o5)().blockElementScrollPositionUntilNextRender;if(null!=d){var S=b[d];null!=S&&S!==C&&k.some((function(e){return e.value===S}))&&j(S)}var E=function(e){var t=e.currentTarget,n=O.indexOf(t),r=k[n].value;r!==C&&(x(t),j(r),null!=d&&w(d,r))},T=function(e){var t,n=null;switch(e.key){case"ArrowRight":var r=O.indexOf(e.currentTarget)+1;n=O[r]||O[0];break;case"ArrowLeft":var a=O.indexOf(e.currentTarget)-1;n=O[a]||O[O.length-1]}null==(t=n)||t.focus()};return a.createElement("div",{className:"tabs-container"},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,p.Z)("tabs",{"tabs--block":o},h)},k.map((function(e){var t=e.value,n=e.label;return a.createElement("li",{role:"tab",tabIndex:C===t?0:-1,"aria-selected":C===t,className:(0,p.Z)("tabs__item",u,{"tabs__item--active":C===t}),key:t,ref:function(e){return O.push(e)},onKeyDown:T,onFocus:E,onClick:E},null!=n?n:t)}))),i?(0,a.cloneElement)(v.filter((function(e){return e.props.value===C}))[0],{className:"margin-vert--md"}):a.createElement("div",{className:"margin-vert--md"},v.map((function(e,t){return(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==C})}))))}function m(e){var t=(0,i.Z)();return a.createElement(c,(0,r.Z)({key:String(t)},e))}},2713:function(e,t,n){var r=(0,n(7294).createContext)(void 0);t.Z=r},1886:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return p},toc:function(){return u},default:function(){return m}});var r=n(7462),a=n(3366),i=(n(7294),n(4137)),o=(n(7225),n(8448),["components"]),s={id:"wdio-novus-visual-regression-service",title:"Novus Visual Regression Service",custom_edit_url:"https://github.com/Jnegrier/wdio-novus-visual-regression-service/edit/master//README.md"},l=void 0,p={unversionedId:"wdio-novus-visual-regression-service",id:"wdio-novus-visual-regression-service",isDocsHomePage:!1,title:"Novus Visual Regression Service",description:"wdio-novus-visual-regression-service is a 3rd party package, for more information please see GitHub | npm",source:"@site/docs/_wdio-novus-visual-regression-service.md",sourceDirName:".",slug:"/wdio-novus-visual-regression-service",permalink:"/docs/wdio-novus-visual-regression-service",editUrl:"https://github.com/Jnegrier/wdio-novus-visual-regression-service/edit/master//README.md",tags:[],version:"current",frontMatter:{id:"wdio-novus-visual-regression-service",title:"Novus Visual Regression Service",custom_edit_url:"https://github.com/Jnegrier/wdio-novus-visual-regression-service/edit/master//README.md"},sidebar:"docs",previous:{title:"Ng-apimock Service",permalink:"/docs/wdio-ng-apimock-service"},next:{title:"Re-run Service",permalink:"/docs/wdio-rerun-service"}},u=[{value:"Installation",id:"installation",children:[],level:2},{value:"Configuration",id:"configuration",children:[{value:"Options",id:"options",children:[],level:3},{value:"Compare Methods",id:"compare-methods",children:[{value:"VisualRegressionCompare.LocalCompare",id:"visualregressioncomparelocalcompare",children:[],level:4},{value:"VisualRegressionCompare.SaveScreenshot",id:"visualregressioncomparesavescreenshot",children:[],level:4},{value:"VisualRegressionCompare.Spectre",id:"visualregressioncomparespectre",children:[],level:4}],level:3}],level:2},{value:"Usage",id:"usage",children:[{value:"License",id:"license",children:[],level:3}],level:2}],c={toc:u};function m(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"wdio-novus-visual-regression-service is a 3rd party package, for more information please see ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/Jnegrier/wdio-novus-visual-regression-service"},"GitHub")," | ",(0,i.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/wdio-novus-visual-regression-service"},"npm"))),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://travis-ci.com/Jnegrier/wdio-novus-visual-regression-service"},(0,i.kt)("img",{parentName:"a",src:"https://travis-ci.com/Jnegrier/wdio-novus-visual-regression-service.svg?branch=master",alt:"Build Status"}))),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Visual regression testing for WebdriverIO")),(0,i.kt)("p",null,"Based on the work of Jan-Andr\xe9 Zinser on ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/zinserjan/wdio-visual-regression-service"},"wdio-visual-regression-service")," and ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/zinserjan/wdio-screenshot"},"wdio-screenshot")),(0,i.kt)("h2",{id:"installation"},"Installation"),(0,i.kt)("p",null,"You can install wdio-novus-visual-regression-service via NPM as usual:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"$ npm install wdio-novus-visual-regression-service --save-dev\n")),(0,i.kt)("p",null,"Instructions on how to install ",(0,i.kt)("inlineCode",{parentName:"p"},"WebdriverIO")," can be found ",(0,i.kt)("a",{parentName:"p",href:"http://webdriver.io/guide/getstarted/install.html"},"here.")),(0,i.kt)("h2",{id:"configuration"},"Configuration"),(0,i.kt)("p",null,"Setup wdio-novus-visual-regression-service by adding ",(0,i.kt)("inlineCode",{parentName:"p"},"novus-visual-regression")," to the service section of your WebdriverIO config and define your desired comparison strategy in the service options."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"// wdio.conf.js\n\nvar path = require('path');\nvar VisualRegressionCompare = require('wdio-novus-visual-regression-service/compare');\n\nfunction getScreenshotName(basePath) {\n  return function(context) {\n    var type = context.type;\n    var testName = context.test.title;\n    var browserVersion = parseInt(context.browser.version, 10);\n    var browserName = context.browser.name;\n    var browserViewport = context.meta.viewport;\n    var browserWidth = browserViewport.width;\n    var browserHeight = browserViewport.height;\n\n    return path.join(basePath, `${testName}_${type}_${browserName}_v${browserVersion}_${browserWidth}x${browserHeight}.png`);\n  };\n}\n\nexports.config = {\n  // ...\n  services: [\n    [\n      'novus-visual-regression',\n      {\n        compare: new VisualRegressionCompare.LocalCompare({\n          referenceName: getScreenshotName(path.join(process.cwd(), 'screenshots/reference')),\n          screenshotName: getScreenshotName(path.join(process.cwd(), 'screenshots/screen')),\n          diffName: getScreenshotName(path.join(process.cwd(), 'screenshots/diff')),\n          misMatchTolerance: 0.01,\n        }),\n        viewportChangePause: 300,\n        viewports: [{ width: 320, height: 480 }, { width: 480, height: 320 }, { width: 1024, height: 768 }],\n        orientations: ['landscape', 'portrait'],\n      }\n    ]\n  ],\n  // ...\n};\n")),(0,i.kt)("h3",{id:"options"},"Options"),(0,i.kt)("p",null,"Under the key ",(0,i.kt)("inlineCode",{parentName:"p"},"visualRegression")," in your wdio.config.js you can pass a configuration object with the following structure:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"compare")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Object")," ",(0,i.kt)("br",null),"\nscreenshot compare method, see ",(0,i.kt)("a",{parentName:"p",href:"#compare-methods"},"Compare Methods"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"viewportChangePause"),"  ",(0,i.kt)("inlineCode",{parentName:"p"},"Number"),"  ( default: 100 ) ",(0,i.kt)("br",null),"\nwait x milliseconds after viewport change. It can take a while for the browser to re-paint. This could lead to rendering issues and produces inconsistent results between runs.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"viewports")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Object[{ width: Number, height: Number }]"),"  ( default: ",(0,i.kt)("em",{parentName:"p"},"[current-viewport]")," ) (",(0,i.kt)("strong",{parentName:"p"},"desktop only"),")",(0,i.kt)("br",null),"\nall screenshots will be taken in different viewport dimensions (e.g. for responsive design tests)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"orientations")," ",(0,i.kt)("inlineCode",{parentName:"p"},"String[] {landscape, portrait}"),"  ( default: ",(0,i.kt)("em",{parentName:"p"},"[current-orientation]")," ) (",(0,i.kt)("strong",{parentName:"p"},"mobile only"),")",(0,i.kt)("br",null),"\nall screenshots will be taken in different screen orientations (e.g. for responsive design tests)"))),(0,i.kt)("h3",{id:"compare-methods"},"Compare Methods"),(0,i.kt)("p",null,"wdio-novus-visual-regression-service allows the usage of different screenshot comparison methods."),(0,i.kt)("h4",{id:"visualregressioncomparelocalcompare"},"VisualRegressionCompare.LocalCompare"),(0,i.kt)("p",null,"As it's name suggests ",(0,i.kt)("em",{parentName:"p"},"LocalCompare")," captures screenshots locally on your computer and compares them against previous runs."),(0,i.kt)("p",null,"You can pass the following options to it's constructor as object:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"referenceName")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Function")," ",(0,i.kt)("br",null),"\npass in a function that returns the filename for the reference screenshot. Function receives a ",(0,i.kt)("em",{parentName:"p"},"context")," object as first parameter with all relevant information about the command.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"screenshotName")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Function")," ",(0,i.kt)("br",null),"\npass in a function that returns the filename for the current screenshot. Function receives a ",(0,i.kt)("em",{parentName:"p"},"context")," object as first parameter with all relevant information about the command.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"diffName")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Function")," ",(0,i.kt)("br",null),"\npass in a function that returns the filename for the diff screenshot. Function receives a ",(0,i.kt)("em",{parentName:"p"},"context")," object as first parameter with all relevant information about the command.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"misMatchTolerance")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Number"),"  ( default: 0.01 ) ",(0,i.kt)("br",null),"\nnumber between 0 and 100 that defines the degree of mismatch to consider two images as identical, increasing this value will decrease test coverage.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"ignoreComparison")," ",(0,i.kt)("inlineCode",{parentName:"p"},"String"),"  ( default: nothing ) ",(0,i.kt)("br",null),"\npass in a string with value of ",(0,i.kt)("inlineCode",{parentName:"p"},"nothing")," , ",(0,i.kt)("inlineCode",{parentName:"p"},"colors")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"antialiasing")," to adjust the comparison method."))),(0,i.kt)("p",null,"For an example of generating screenshot filenames dependent on the current test name, have a look at the sample code of ",(0,i.kt)("a",{parentName:"p",href:"#configuration"},"Configuration"),"."),(0,i.kt)("h4",{id:"visualregressioncomparesavescreenshot"},"VisualRegressionCompare.SaveScreenshot"),(0,i.kt)("p",null,"This method is a stripped variant of ",(0,i.kt)("inlineCode",{parentName:"p"},"VisualRegressionCompare.LocalCompare")," to capture only screenshots. This is quite useful when you just want to create reference screenshots and overwrite the previous one without diffing."),(0,i.kt)("p",null,"You can pass the following options to it's constructor as object:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"screenshotName")," ",(0,i.kt)("inlineCode",{parentName:"li"},"Function")," ",(0,i.kt)("br",null),"\npass in a function that returns the filename for the current screenshot. Function receives a ",(0,i.kt)("em",{parentName:"li"},"context")," object as first parameter with all relevant information about the command.")),(0,i.kt)("h4",{id:"visualregressioncomparespectre"},"VisualRegressionCompare.Spectre"),(0,i.kt)("p",null,"This method is used for uploading screenshots to the web application ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/wearefriday/spectre"},"Spectre"),".\nSpectre is a UI for visual regression testing. It stores the screenshots and compares them which is quite useful for Continuous Integration."),(0,i.kt)("p",null,"You can pass the following options to it's constructor as object:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"url")," ",(0,i.kt)("inlineCode",{parentName:"p"},"String")," ",(0,i.kt)("br",null),"\npass in a spectre webservice url.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"project")," ",(0,i.kt)("inlineCode",{parentName:"p"},"String")," ",(0,i.kt)("br",null),"\npass in a name for your project.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"suite")," ",(0,i.kt)("inlineCode",{parentName:"p"},"String")," ",(0,i.kt)("br",null),"\npass in a name for your testsuite. One project can contain several suites.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"test")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Function")," ",(0,i.kt)("br",null),"\npass in a function that returns the test name for the screenshot. Function receives a ",(0,i.kt)("em",{parentName:"p"},"context")," object as first parameter with all relevant information about the command.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"browser")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Function")," ",(0,i.kt)("br",null),"\npass in a function that returns the browser for the screenshot. Function receives a ",(0,i.kt)("em",{parentName:"p"},"context")," object as first parameter with all relevant information about the command.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"size")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Function")," ",(0,i.kt)("br",null),"\npass in a function that returns the size for the screenshot. Function receives a ",(0,i.kt)("em",{parentName:"p"},"context")," object as first parameter with all relevant information about the command.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"fuzzLevel")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Number"),"  ( default: 30 ) ",(0,i.kt)("br",null),"\nnumber between 0 and 100 that defines the fuzz factor of Spectre's image comparison method. For more details please have a look at ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/wearefriday/spectre"},"Spectre documentation"),"."))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"// wdio.conf.js\n\nvar path = require('path');\nvar VisualRegressionCompare = require('wdio-novus-visual-regression-service/compare');\n\nexports.config = {\n  // ...\n  services: [\n    [\n      'novus-visual-regression',\n      {\n        compare: new VisualRegressionCompare.Spectre({\n          url: 'http://localhost:3000',\n          project: 'my project',\n          suite: 'my test suite',\n          test: function getTest(context) {\n            return context.test.title;\n          },\n          browser: function getBrowser(context) {\n            return context.browser.name;\n          },\n          size: function getSize(context) {\n            return context.meta.viewport != null ? context.meta.viewport.width : context.meta.orientation;\n          },\n          fuzzLevel: 30\n        }),\n        viewportChangePause: 300,\n        viewports: [{ width: 320, height: 480 }, { width: 480, height: 320 }, { width: 1024, height: 768 }],\n        orientations: ['landscape', 'portrait'],\n      }\n    ]\n  ],\n  // ...\n};\n")),(0,i.kt)("h2",{id:"usage"},"Usage"),(0,i.kt)("p",null,"wdio-novus-visual-regression-service enhances an WebdriverIO instance with the following commands:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"browser.checkViewport([{options}]);")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"browser.checkDocument([{options}]);")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"browser.checkElement(elementSelector, [{options}]);"))),(0,i.kt)("p",null,"All of these provide options that will help you to capture screenshots in different dimensions or to exclude irrelevant parts (e.g. content). The following options are\navailable:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"exclude")," ",(0,i.kt)("inlineCode",{parentName:"p"},"String[]|Object[]")," (",(0,i.kt)("strong",{parentName:"p"},"not yet implemented"),")",(0,i.kt)("br",null),"\nexclude frequently changing parts of your screenshot, you can either pass all kinds of different ",(0,i.kt)("a",{parentName:"p",href:"http://webdriver.io/guide/usage/selectors.html"},"WebdriverIO selector strategies"),"\nthat queries one or multiple elements or you can define x and y values which stretch a rectangle or polygon")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"hide")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Object[]"),(0,i.kt)("br",null),"\nhides all elements queried by all kinds of different ",(0,i.kt)("a",{parentName:"p",href:"http://webdriver.io/guide/usage/selectors.html"},"WebdriverIO selector strategies")," (via ",(0,i.kt)("inlineCode",{parentName:"p"},"visibility: hidden"),")")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"remove")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Object[]"),(0,i.kt)("br",null),"\nremoves all elements queried by all kinds of different ",(0,i.kt)("a",{parentName:"p",href:"http://webdriver.io/guide/usage/selectors.html"},"WebdriverIO selector strategies")," (via ",(0,i.kt)("inlineCode",{parentName:"p"},"display: none"),")")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"viewports")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Object[{ width: Number, height: Number }]")," (",(0,i.kt)("strong",{parentName:"p"},"desktop only"),")",(0,i.kt)("br",null),"\nOverrides the global ",(0,i.kt)("em",{parentName:"p"},"viewports")," value for this command. All screenshots will be taken in different viewport dimensions (e.g. for responsive design tests)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"orientations")," ",(0,i.kt)("inlineCode",{parentName:"p"},"String[] {landscape, portrait}")," (",(0,i.kt)("strong",{parentName:"p"},"mobile only"),")",(0,i.kt)("br",null),"\nOverrides the global ",(0,i.kt)("em",{parentName:"p"},"orientations")," value for this command. All screenshots will be taken in different screen orientations (e.g. for responsive design tests)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"misMatchTolerance")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Number")," ",(0,i.kt)("br",null),"\nOverrides the global ",(0,i.kt)("em",{parentName:"p"},"misMatchTolerance")," value for this command. Pass in a number between 0 and 100 that defines the degree of mismatch to consider two images as identical.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"fuzzLevel")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Number")," ",(0,i.kt)("br",null),"\nOverrides the global ",(0,i.kt)("em",{parentName:"p"},"fuzzLevel")," value for this command. Pass in a number between 0 and 100 that defines the fuzz factor of Spectre's image comparison method.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"ignoreComparison")," ",(0,i.kt)("inlineCode",{parentName:"p"},"String")," ",(0,i.kt)("br",null),"\nOverrides the global ",(0,i.kt)("em",{parentName:"p"},"ignoreComparison")," value for this command. Pass in a string with value of ",(0,i.kt)("inlineCode",{parentName:"p"},"nothing")," , ",(0,i.kt)("inlineCode",{parentName:"p"},"colors")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"antialiasing")," to adjust the comparison method.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"viewportChangePause"),"  ",(0,i.kt)("inlineCode",{parentName:"p"},"Number")," ",(0,i.kt)("br",null),"\nOverrides the global ",(0,i.kt)("em",{parentName:"p"},"viewportChangePause")," value for this command. Wait x milliseconds after viewport change."))),(0,i.kt)("h3",{id:"license"},"License"),(0,i.kt)("p",null,"MIT"))}m.isMDXComponent=!0}}]);