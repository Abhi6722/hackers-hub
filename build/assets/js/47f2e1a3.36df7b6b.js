"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1430],{4137:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return p}});var a=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=a.createContext({}),c=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=c(e.components);return a.createElement(l.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),m=c(t),p=o,y=m["".concat(l,".").concat(p)]||m[p]||d[p]||r;return t?a.createElement(y,i(i({ref:n},u),{},{components:t})):a.createElement(y,i({ref:n},u))}));function p(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=t.length,i=new Array(r);i[0]=m;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var c=2;c<r;c++)i[c]=t[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},8448:function(e,n,t){var a=t(7294);n.Z=function(e){var n=e.children,t=e.hidden,o=e.className;return a.createElement("div",{role:"tabpanel",hidden:t,className:o},n)}},7225:function(e,n,t){t.d(n,{Z:function(){return m}});var a=t(7462),o=t(7294),r=t(1048),i=t(2713);var s=function(){var e=(0,o.useContext)(i.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},l=t(3309),c=t(6010),u="tabItem_vU9c";function d(e){var n,t,a,r=e.lazy,i=e.block,d=e.defaultValue,m=e.values,p=e.groupId,y=e.className,h=o.Children.map(e.children,(function(e){if((0,o.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),v=null!=m?m:h.map((function(e){var n=e.props;return{value:n.value,label:n.label}})),f=(0,l.lx)(v,(function(e,n){return e.value===n.value}));if(f.length>0)throw new Error('Docusaurus error: Duplicate values "'+f.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var b=null===d?d:null!=(n=null!=d?d:null==(t=h.find((function(e){return e.props.default})))?void 0:t.props.value)?n:null==(a=h[0])?void 0:a.props.value;if(null!==b&&!v.some((function(e){return e.value===b})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+b+'" but none of its children has the corresponding value. Available values are: '+v.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var w=s(),k=w.tabGroupChoices,g=w.setTabGroupChoices,N=(0,o.useState)(b),T=N[0],O=N[1],j=[],x=(0,l.o5)().blockElementScrollPositionUntilNextRender;if(null!=p){var C=k[p];null!=C&&C!==T&&v.some((function(e){return e.value===C}))&&O(C)}var E=function(e){var n=e.currentTarget,t=j.indexOf(n),a=v[t].value;a!==T&&(x(n),O(a),null!=p&&g(p,a))},I=function(e){var n,t=null;switch(e.key){case"ArrowRight":var a=j.indexOf(e.currentTarget)+1;t=j[a]||j[0];break;case"ArrowLeft":var o=j.indexOf(e.currentTarget)-1;t=j[o]||j[j.length-1]}null==(n=t)||n.focus()};return o.createElement("div",{className:"tabs-container"},o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,c.Z)("tabs",{"tabs--block":i},y)},v.map((function(e){var n=e.value,t=e.label;return o.createElement("li",{role:"tab",tabIndex:T===n?0:-1,"aria-selected":T===n,className:(0,c.Z)("tabs__item",u,{"tabs__item--active":T===n}),key:n,ref:function(e){return j.push(e)},onKeyDown:I,onFocus:E,onClick:E},null!=t?t:n)}))),r?(0,o.cloneElement)(h.filter((function(e){return e.props.value===T}))[0],{className:"margin-vert--md"}):o.createElement("div",{className:"margin-vert--md"},h.map((function(e,n){return(0,o.cloneElement)(e,{key:n,hidden:e.props.value!==T})}))))}function m(e){var n=(0,r.Z)();return o.createElement(d,(0,a.Z)({key:String(n)},e))}},2713:function(e,n,t){var a=(0,t(7294).createContext)(void 0);n.Z=a},6876:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return c},contentTitle:function(){return u},metadata:function(){return d},toc:function(){return m},default:function(){return y}});var a=t(7462),o=t(3366),r=(t(7294),t(4137)),i=t(7225),s=t(8448),l=["components"],c={id:"sync-vs-async",title:"Sync vs. Async Mode"},u=void 0,d={unversionedId:"sync-vs-async",id:"sync-vs-async",isDocsHomePage:!1,title:"Sync vs. Async Mode",description:"As of 14/04/2021 sync mode will not be supported anymore starting from Node.js v16 due to changes in Chromium. If you start a project with WebdriverIO we recommend to not use sync mode anymore. The community is working on a transition plan, read more on that in this RFC.",source:"@site/docs/SyncVsAsync.md",sourceDirName:".",slug:"/sync-vs-async",permalink:"/docs/sync-vs-async",editUrl:"https://github.com/Abhi6722/hackers-hub/edit/main/website/docs/SyncVsAsync.md",tags:[],version:"current",frontMatter:{id:"sync-vs-async",title:"Sync vs. Async Mode"},sidebar:"docs",previous:{title:"Setup Types",permalink:"/docs/setuptypes"},next:{title:"Automation Protocols",permalink:"/docs/automationProtocols"}},m=[{value:"How to enable/disable sync mode",id:"how-to-enabledisable-sync-mode",children:[],level:2},{value:"Sync mode",id:"sync-mode",children:[{value:"Common issues in sync mode",id:"common-issues-in-sync-mode",children:[],level:3}],level:2},{value:"Async Mode",id:"async-mode",children:[{value:"Common issues in async mode",id:"common-issues-in-async-mode",children:[],level:3}],level:2}],p={toc:m};function y(e){var n=e.components,t=(0,o.Z)(e,l);return(0,r.kt)("wrapper",(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"As of ",(0,r.kt)("strong",{parentName:"p"},"14/04/2021")," sync mode will not be supported anymore starting from Node.js v16 due to ",(0,r.kt)("a",{parentName:"p",href:"https://chromium-review.googlesource.com/c/v8/v8/+/2537690"},"changes")," in Chromium. If you start a project with WebdriverIO we recommend to not use sync mode anymore. The community is working on a transition plan, ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/webdriverio/webdriverio/discussions/6702"},"read more on that in this RFC"),"."))),(0,r.kt)("p",null,"WebdriverIO runs a set of asynchronous commands to interact with the browser or mobile device. In JavaScript asynchronous operations are handled via ",(0,r.kt)("inlineCode",{parentName:"p"},"async/await"),". This however can be a confusing concept for people unfamiliar with the language. In addition to that it can make tests very verbose as almost every operation is asynchronous. To simplify its usage WebdriverIO provides the ability to run commands synchronous through ",(0,r.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/fibers"},(0,r.kt)("inlineCode",{parentName:"a"},"node-fibers")),"."),(0,r.kt)("h2",{id:"how-to-enabledisable-sync-mode"},"How to enable/disable sync mode"),(0,r.kt)("p",null,"To enable sync mode you only need to add the ",(0,r.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/@wdio/sync"},(0,r.kt)("inlineCode",{parentName:"a"},"@wdio/sync"))," package to your dev dependencies:"),(0,r.kt)(i.Z,{defaultValue:"npm",groupId:"npm2yarn",values:[{label:"npm",value:"npm"},{label:"Yarn",value:"yarn"}],mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"npm",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm install --save-dev @wdio/sync\n"))),(0,r.kt)(s.Z,{value:"yarn",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add --dev @wdio/sync\n")))),(0,r.kt)("p",null,"The package will be automatically detected by the framework and the environment properly set up to run synchronous."),(0,r.kt)("h2",{id:"sync-mode"},"Sync mode"),(0,r.kt)("p",null,"If you're using ",(0,r.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/@wdio/sync"},(0,r.kt)("inlineCode",{parentName:"a"},"@wdio/sync"))," then you can avoid awaiting for command calls. It is still required to deal with Promises from 3rd-party libraries, you should use ",(0,r.kt)("a",{parentName:"p",href:"api/browser/call"},"browser.call")," for this to wrap them and make them synchronous too."),(0,r.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Synchronous Mode will depcrecated with Node.js v16. With an update to the\nunderlying Chromium version it became technically impossible to provide the\nsame synchronous behavior. We recommend to start transition to asynchronous\ncommand execution. For more information, see our ",(0,r.kt)("a",{href:"https://github.com/webdriverio/webdriverio/discussions/6702"},"RFC"),"."))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"// 3rd-party library example\n// https://www.npmjs.com/package/got#gotgeturl-options\nconst { get } = require('got')\n\ndescribe('suite sync', () => {\n    // make sure to remove `async` keyword otherwise function treated as async\n    // and you have to await every browser call.\n    // The same is applicable to hooks in `wdio.conf.js` as well.\n    it('test sync', () => {\n        browser.pause(500)\n\n        // wrap 3rd-party library calls with `browser.call`\n        const response = browser.call(\n            () => get('https://cat-fact.herokuapp.com/facts/', {\n                responseType: 'json'\n            })\n        )\n        console.log(response.body[0].type) // outputs: \"cat\"\n\n        $('body').click() // You can chain functions in sync mode\n    })\n\n    // If you have `@wdio/sync` installed and configured, it is still possible to use async functions.\n    // However, in such case you have to await every browser/element call like in async mode, and this can\n    // be confusing when other tests are sync, so we discourage mixing modes, but it is possible to do so.\n    // The best practice in sync mode is to wrap anything async with `browser.call`.\n    it('using async function in sync mode', async () => {\n        await browser.pause(500)\n\n        const response = await get('https://cat-fact.herokuapp.com/facts/')\n        console.log(response.body[0].type) // outputs: \"cat\"\n\n        const el = await $('body')\n        await el.click()\n    })\n})\n")),(0,r.kt)("h3",{id:"common-issues-in-sync-mode"},"Common issues in sync mode"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"fibers")," failed to install properly. The package usually comes with pre-built binaries but if your environment doesn't support it these need to be compiled which require ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/nodejs/node-gyp"},"node-gyp")," and Python.")),(0,r.kt)("h2",{id:"async-mode"},"Async Mode"),(0,r.kt)("p",null,"If you decide to run in async mode all WebdriverIO commands return a Promise and need to be awaited to get the result, e.g.:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"describe('suite async', () => {\n    it('test', async () => { // pay attention to `async` keyword\n        const el = await $('body') // note `await` keyword\n        await el.click()\n\n        await browser.pause(500)\n\n        console.log(browser.capabilities) // static properties should not be awaited\n\n        await $('body').click()\n    })\n})\n")),(0,r.kt)("h3",{id:"common-issues-in-async-mode"},"Common issues in async mode"),(0,r.kt)("p",null,"There can be quite some confusion when handling asynchronous commands manually. The usual problems are:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"previous command was not awaited:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const el = await $('body')\nel.waitForExist() // ERROR: await is missing here, you'll get `Unhandled promise rejection`.\nawait el.click()\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Array loops (e.g., ",(0,r.kt)("inlineCode",{parentName:"p"},"forEach")," & ",(0,r.kt)("inlineCode",{parentName:"p"},"map"),") don't need ",(0,r.kt)("inlineCode",{parentName:"p"},"Promise.all")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const links = await $$('a')\nconst linksText = await links.map((link) => {\n    return link.getText();\n})\n")))))}y.isMDXComponent=!0}}]);