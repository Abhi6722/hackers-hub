"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4260],{4137:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var o=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,i=function(e,t){if(null==e)return{};var n,o,i={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=o.createContext({}),u=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=u(e.components);return o.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=u(n),m=i,g=d["".concat(l,".").concat(m)]||d[m]||p[m]||r;return n?o.createElement(g,a(a({ref:t},c),{},{components:n})):o.createElement(g,a({ref:t},c))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,a=new Array(r);a[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,a[1]=s;for(var u=2;u<r;u++)a[u]=n[u];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8204:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return u},toc:function(){return c},default:function(){return d}});var o=n(7462),i=n(3366),r=(n(7294),n(4137)),a=["components"],s={id:"debugging",title:"Debugging"},l=void 0,u={unversionedId:"debugging",id:"debugging",isDocsHomePage:!1,title:"Debugging",description:"Debugging is significantly more difficult when several processes spawn dozens of tests in multiple browsers.",source:"@site/docs/Debugging.md",sourceDirName:".",slug:"/debugging",permalink:"/docs/debugging",editUrl:"https://github.com/Abhi6722/hackers-hub/edit/main/website/docs/Debugging.md",tags:[],version:"current",frontMatter:{id:"debugging",title:"Debugging"},sidebar:"docs",previous:{title:"Page Object Pattern",permalink:"/docs/pageobjects"},next:{title:"REPL interface",permalink:"/docs/repl"}},c=[{value:"The Debug Command",id:"the-debug-command",children:[],level:2},{value:"Dynamic configuration",id:"dynamic-configuration",children:[],level:2},{value:"Debugging with Visual Studio Code (VSCode)",id:"debugging-with-visual-studio-code-vscode",children:[],level:2},{value:"Dynamic Repl with Atom",id:"dynamic-repl-with-atom",children:[],level:2},{value:"Debugging with WebStorm / Intellij",id:"debugging-with-webstorm--intellij",children:[],level:2}],p={toc:c};function d(e){var t=e.components,n=(0,i.Z)(e,a);return(0,r.kt)("wrapper",(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Debugging is significantly more difficult when several processes spawn dozens of tests in multiple browsers."),(0,r.kt)("p",null,"For starters, it is extremely helpful to limit parallelism by setting ",(0,r.kt)("inlineCode",{parentName:"p"},"maxInstances")," to ",(0,r.kt)("inlineCode",{parentName:"p"},"1"),", and targeting only those specs and browsers that need to be debugged."),(0,r.kt)("p",null,"In ",(0,r.kt)("inlineCode",{parentName:"p"},"wdio.conf"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"exports.config = {\n    // ...\n    maxInstances: 1,\n    specs: [\n        '**/myspec.spec.js'\n    ],\n    capabilities: [{\n        browserName: 'firefox'\n    }],\n    // ...\n}\n")),(0,r.kt)("h2",{id:"the-debug-command"},"The Debug Command"),(0,r.kt)("p",null,"In many cases, you can use ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/browser/debug"},(0,r.kt)("inlineCode",{parentName:"a"},"browser.debug()"))," to pause your test and inspect the browser."),(0,r.kt)("p",null,"Your command line interface will also switch into REPL mode. This mode allows you to fiddle around with commands and elements on the page. In REPL mode, you can access the ",(0,r.kt)("inlineCode",{parentName:"p"},"browser")," object","\u2014","or ",(0,r.kt)("inlineCode",{parentName:"p"},"$")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"$$")," functions","\u2014","just like you can in your tests."),(0,r.kt)("p",null,"When using ",(0,r.kt)("inlineCode",{parentName:"p"},"browser.debug()"),", you will likely need to increase the timeout of the test runner to prevent the test runner from failing the test for taking to long.  For example:"),(0,r.kt)("p",null,"In ",(0,r.kt)("inlineCode",{parentName:"p"},"wdio.conf"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"jasmineOpts: {\n    defaultTimeoutInterval: (24 * 60 * 60 * 1000)\n}\n")),(0,r.kt)("p",null,"See ",(0,r.kt)("a",{parentName:"p",href:"/docs/timeouts"},"timeouts")," for more information on how to do that using other frameworks."),(0,r.kt)("p",null,"To proceed with the tests after debugging, in the shell use ",(0,r.kt)("inlineCode",{parentName:"p"},"^C")," shortcut or the ",(0,r.kt)("inlineCode",{parentName:"p"},".exit")," command."),(0,r.kt)("h2",{id:"dynamic-configuration"},"Dynamic configuration"),(0,r.kt)("p",null,"Note that ",(0,r.kt)("inlineCode",{parentName:"p"},"wdio.conf.js")," can contain Javascript. Since you probably do not want to permanently change your timeout value to 1 day, it can be often helpful to change these settings from the command line using an environment variable."),(0,r.kt)("p",null,"Using this technique, you can dynamically change the configuration:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const debug = process.env.DEBUG\nconst defaultCapabilities = ...\nconst defaultTimeoutInterval = ...\nconst defaultSpecs = ...\n\nexports.config = {\n    // ...\n    maxInstances: debug ? 1 : 100,\n    capabilities: debug ? [{ browserName: 'chrome' }] : defaultCapabilities,\n    execArgv: debug ? ['--inspect'] : [],\n    jasmineOpts: {\n      defaultTimeoutInterval: debug ? (24 * 60 * 60 * 1000) : defaultTimeoutInterval\n    }\n    // ...\n}\n")),(0,r.kt)("p",null,"You can then prefix the ",(0,r.kt)("inlineCode",{parentName:"p"},"wdio")," command with the ",(0,r.kt)("inlineCode",{parentName:"p"},"debug")," flag:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ DEBUG=true npx wdio wdio.conf.js --spec ./tests/e2e/myspec.test.js\n")),(0,r.kt)("p",null,"...and debug your spec file with the DevTools!"),(0,r.kt)("h2",{id:"debugging-with-visual-studio-code-vscode"},"Debugging with Visual Studio Code (VSCode)"),(0,r.kt)("p",null,"If you want to debug your tests with breakpoints in latest VSCode, you have to install and enable the ",(0,r.kt)("a",{parentName:"p",href:"https://marketplace.visualstudio.com/items?itemName=ms-vscode.js-debug-nightly"},"nightly version of the JavaScript Debugger"),"."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"according to ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/microsoft/vscode/issues/82523#issuecomment-609934308"},"https://github.com/microsoft/vscode/issues/82523#issuecomment-609934308")," this is only needed for windows and linux. mac os x is working without the nightly version.")),(0,r.kt)("p",null,"Additional info: ",(0,r.kt)("a",{parentName:"p",href:"https://code.visualstudio.com/docs/nodejs/nodejs-debugging"},"https://code.visualstudio.com/docs/nodejs/nodejs-debugging")),(0,r.kt)("p",null,"It's possible to run all or selected spec file(s). Debug configuration(s) have to be added to ",(0,r.kt)("inlineCode",{parentName:"p"},".vscode/launch.json"),", to debug selected spec add the following config:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'{\n    "name": "run select spec",\n    "type": "node",\n    "request": "launch",\n    "args": ["wdio.conf.js", "--spec", "${file}"],\n    "cwd": "${workspaceFolder}",\n    "autoAttachChildProcesses": true,\n    "program": "${workspaceRoot}/node_modules/@wdio/cli/bin/wdio.js",\n    "console": "integratedTerminal",\n    "skipFiles": [\n        "${workspaceFolder}/node_modules/**/*.js",\n        "${workspaceFolder}/lib/**/*.js",\n        "<node_internals>/**/*.js"\n    ]\n},\n')),(0,r.kt)("p",null,"To run all spec files remove ",(0,r.kt)("inlineCode",{parentName:"p"},'"--spec", "${file}"')," from ",(0,r.kt)("inlineCode",{parentName:"p"},'"args"')),(0,r.kt)("p",null,"Example: ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/mgrybyk/webdriverio-devtools/blob/master/.vscode/launch.json"},".vscode/launch.json")),(0,r.kt)("h2",{id:"dynamic-repl-with-atom"},"Dynamic Repl with Atom"),(0,r.kt)("p",null,"If you are an ",(0,r.kt)("a",{parentName:"p",href:"https://atom.io/"},"Atom")," hacker you can try ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/kurtharriger/wdio-repl"},(0,r.kt)("inlineCode",{parentName:"a"},"wdio-repl"))," by ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/kurtharriger"},"@kurtharriger")," which is a dynamic repl that allows you to execute single code lines in Atom. Watch ",(0,r.kt)("a",{parentName:"p",href:"https://www.youtube.com/watch?v=kdM05ChhLQE"},"this")," YouTube video to see a demo."),(0,r.kt)("h2",{id:"debugging-with-webstorm--intellij"},"Debugging with WebStorm / Intellij"),(0,r.kt)("p",null,"You can create a node.js debug configuration like this:\n",(0,r.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/18728354/120088460-81844c00-c0a5-11eb-916b-50f21c8472a8.png",alt:"Screenshot from 2021-05-29 17-33-33"}),(0,r.kt)("br",{parentName:"p"}),"\n","Watch this ",(0,r.kt)("a",{parentName:"p",href:"https://www.youtube.com/watch?v=Qcqnmle6Wu8"},"YouTube Video")," for more information about how to make a configuration."))}d.isMDXComponent=!0}}]);