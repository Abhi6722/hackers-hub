"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5231],{4137:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),u=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=u(e.components);return r.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,p=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),c=u(n),m=a,k=c["".concat(p,".").concat(m)]||c[m]||d[m]||l;return n?r.createElement(k,i(i({ref:t},s),{},{components:n})):r.createElement(k,i({ref:t},s))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,i=new Array(l);i[0]=c;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var u=2;u<l;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},8448:function(e,t,n){var r=n(7294);t.Z=function(e){var t=e.children,n=e.hidden,a=e.className;return r.createElement("div",{role:"tabpanel",hidden:n,className:a},t)}},7225:function(e,t,n){n.d(t,{Z:function(){return c}});var r=n(7462),a=n(7294),l=n(1048),i=n(2713);var o=function(){var e=(0,a.useContext)(i.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},p=n(3309),u=n(6010),s="tabItem_vU9c";function d(e){var t,n,r,l=e.lazy,i=e.block,d=e.defaultValue,c=e.values,m=e.groupId,k=e.className,f=a.Children.map(e.children,(function(e){if((0,a.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),h=null!=c?c:f.map((function(e){var t=e.props;return{value:t.value,label:t.label}})),N=(0,p.lx)(h,(function(e,t){return e.value===t.value}));if(N.length>0)throw new Error('Docusaurus error: Duplicate values "'+N.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var v=null===d?d:null!=(t=null!=d?d:null==(n=f.find((function(e){return e.props.default})))?void 0:n.props.value)?t:null==(r=f[0])?void 0:r.props.value;if(null!==v&&!h.some((function(e){return e.value===v})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+v+'" but none of its children has the corresponding value. Available values are: '+h.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var g=o(),b=g.tabGroupChoices,y=g.setTabGroupChoices,C=(0,a.useState)(v),w=C[0],E=C[1],S=[],j=(0,p.o5)().blockElementScrollPositionUntilNextRender;if(null!=m){var x=b[m];null!=x&&x!==w&&h.some((function(e){return e.value===x}))&&E(x)}var T=function(e){var t=e.currentTarget,n=S.indexOf(t),r=h[n].value;r!==w&&(j(t),E(r),null!=m&&y(m,r))},A=function(e){var t,n=null;switch(e.key){case"ArrowRight":var r=S.indexOf(e.currentTarget)+1;n=S[r]||S[0];break;case"ArrowLeft":var a=S.indexOf(e.currentTarget)-1;n=S[a]||S[S.length-1]}null==(t=n)||t.focus()};return a.createElement("div",{className:"tabs-container"},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,u.Z)("tabs",{"tabs--block":i},k)},h.map((function(e){var t=e.value,n=e.label;return a.createElement("li",{role:"tab",tabIndex:w===t?0:-1,"aria-selected":w===t,className:(0,u.Z)("tabs__item",s,{"tabs__item--active":w===t}),key:t,ref:function(e){return S.push(e)},onKeyDown:A,onFocus:T,onClick:T},null!=n?n:t)}))),l?(0,a.cloneElement)(f.filter((function(e){return e.props.value===w}))[0],{className:"margin-vert--md"}):a.createElement("div",{className:"margin-vert--md"},f.map((function(e,t){return(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==w})}))))}function c(e){var t=(0,l.Z)();return a.createElement(d,(0,r.Z)({key:String(t)},e))}},2713:function(e,t,n){var r=(0,n(7294).createContext)(void 0);t.Z=r},2169:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return p},metadata:function(){return u},toc:function(){return s},default:function(){return c}});var r=n(7462),a=n(3366),l=(n(7294),n(4137)),i=(n(7225),n(8448),["components"]),o={id:"allure-reporter",title:"Allure Reporter",custom_edit_url:"https://github.com/webdriverio/webdriverio/edit/main/packages/wdio-allure-reporter/README.md"},p=void 0,u={unversionedId:"allure-reporter",id:"allure-reporter",isDocsHomePage:!1,title:"Allure Reporter",description:"A WebdriverIO reporter plugin to create Allure Test Reports.",source:"@site/docs/_allure-reporter.md",sourceDirName:".",slug:"/allure-reporter",permalink:"/docs/allure-reporter",editUrl:"https://github.com/webdriverio/webdriverio/edit/main/packages/wdio-allure-reporter/README.md",tags:[],version:"current",frontMatter:{id:"allure-reporter",title:"Allure Reporter",custom_edit_url:"https://github.com/webdriverio/webdriverio/edit/main/packages/wdio-allure-reporter/README.md"},sidebar:"docs",previous:{title:"Bamboo",permalink:"/docs/bamboo"},next:{title:"Concise Reporter",permalink:"/docs/concise-reporter"}},s=[{value:"Installation",id:"installation",children:[],level:2},{value:"Configuration",id:"configuration",children:[],level:2},{value:"Supported Allure API",id:"supported-allure-api",children:[{value:"Usage",id:"usage",children:[],level:3}],level:2},{value:"Displaying the report",id:"displaying-the-report",children:[{value:"Command-line",id:"command-line",children:[],level:3},{value:"Autogenerate Report",id:"autogenerate-report",children:[],level:3},{value:"Jenkins",id:"jenkins",children:[],level:3}],level:2},{value:"Add Screenshots",id:"add-screenshots",children:[],level:2}],d={toc:s};function c(e){var t=e.components,o=(0,a.Z)(e,i);return(0,l.kt)("wrapper",(0,r.Z)({},d,o,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"A WebdriverIO reporter plugin to create ",(0,l.kt)("a",{parentName:"p",href:"https://docs.qameta.io/allure/"},"Allure Test Reports"),".")),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"Allure Reporter Example",src:n(5956).Z})),(0,l.kt)("h2",{id:"installation"},"Installation"),(0,l.kt)("p",null,"The easiest way is to keep ",(0,l.kt)("inlineCode",{parentName:"p"},"@wdio/allure-reporter")," as a devDependency in your ",(0,l.kt)("inlineCode",{parentName:"p"},"package.json"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "devDependencies": {\n    "@wdio/allure-reporter": "^5.0.0"\n  }\n}\n')),(0,l.kt)("p",null,"You can simple do it by:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"npm install @wdio/allure-reporter --save-dev\n")),(0,l.kt)("h2",{id:"configuration"},"Configuration"),(0,l.kt)("p",null,"Configure the output directory in your wdio.conf.js file:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"exports.config = {\n    // ...\n    reporters: [['allure', {\n        outputDir: 'allure-results',\n        disableWebdriverStepsReporting: true,\n        disableWebdriverScreenshotsReporting: true,\n    }]],\n    // ...\n}\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"outputDir")," defaults to ",(0,l.kt)("inlineCode",{parentName:"li"},"./allure-results"),". After a test run is complete, you will find that this directory has been populated with an ",(0,l.kt)("inlineCode",{parentName:"li"},".xml")," file for each spec, plus a number of ",(0,l.kt)("inlineCode",{parentName:"li"},".txt")," and ",(0,l.kt)("inlineCode",{parentName:"li"},".png")," files and other attachments."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"disableWebdriverStepsReporting")," - optional parameter(",(0,l.kt)("inlineCode",{parentName:"li"},"false")," by default), in order to log only custom steps to the reporter."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"issueLinkTemplate")," - optional parameter, in order to specify the issue link pattern. Reporter will replace ",(0,l.kt)("inlineCode",{parentName:"li"},"{}")," placeholder with value specified in ",(0,l.kt)("inlineCode",{parentName:"li"},"addIssue(value)")," call parameter. Example ",(0,l.kt)("inlineCode",{parentName:"li"},"https://example.org/issue/{}")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"tmsLinkTemplate")," - optional parameter, in order to specify the tms link pattern. Reporter will replace ",(0,l.kt)("inlineCode",{parentName:"li"},"{}")," placeholder with value specified in ",(0,l.kt)("inlineCode",{parentName:"li"},"addTestId(value)")," call parameter. Example ",(0,l.kt)("inlineCode",{parentName:"li"},"https://example.org/tms/{}")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"disableWebdriverScreenshotsReporting")," - optional parameter(",(0,l.kt)("inlineCode",{parentName:"li"},"false")," by default), in order to not attach screenshots to the reporter."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"useCucumberStepReporter")," - optional parameter (",(0,l.kt)("inlineCode",{parentName:"li"},"false")," by default), set it to true in order to change the report hierarchy when using cucumber. Try it for yourself and see how it looks."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"disableMochaHooks")," - optional parameter (",(0,l.kt)("inlineCode",{parentName:"li"},"false")," by default), set it to true in order to not fetch the ",(0,l.kt)("inlineCode",{parentName:"li"},"before/after")," stacktrace/screenshot/result hooks into the Allure Reporter."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"addConsoleLogs")," - optional parameter(",(0,l.kt)("inlineCode",{parentName:"li"},"false")," by default), set to true in order to attach console logs from step to the reporter.")),(0,l.kt)("h2",{id:"supported-allure-api"},"Supported Allure API"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"addLabel(name, value)")," - assign a custom label to test"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"addFeature(featureName)")," \u2013 assign feature to test"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"addStory(storyName)")," \u2013 assign user story to test"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"addSeverity(value)")," \u2013 assign severity to test, accepts one of these values: blocker, critical, normal, minor, trivial"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"addIssue(value)")," \u2013 assign issue id to test"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"addTestId(value)")," \u2013 assign TMS test id to test"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"addEnvironment(name, value)")," \u2013 save environment value"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"addAttachment(name, content, [type])")," \u2013 save attachment to test.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"name")," (",(0,l.kt)("em",{parentName:"li"},"String"),") - attachment name."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"content")," \u2013 attachment content."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"type")," (",(0,l.kt)("em",{parentName:"li"},"String"),", optional) \u2013 attachment MIME-type, ",(0,l.kt)("inlineCode",{parentName:"li"},"text/plain")," by default"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"addArgument(name, value)")," - add additional argument to test"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"addDescription(description, [type])")," \u2013 add description to test.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"description")," (",(0,l.kt)("em",{parentName:"li"},"String"),") - description of the test."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"type")," (",(0,l.kt)("em",{parentName:"li"},"String"),", optional) \u2013 description type, ",(0,l.kt)("inlineCode",{parentName:"li"},"text")," by default. Values ","['text', 'html','markdown']"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"addStep(title, [{content, name = 'attachment'}], [status])")," - add step to test.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"title")," (",(0,l.kt)("em",{parentName:"li"},"String"),") - name of the step."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"content")," (",(0,l.kt)("em",{parentName:"li"},"String"),", optional) - step attachment"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"name")," (",(0,l.kt)("em",{parentName:"li"},"String"),", optional) - step attachment name, ",(0,l.kt)("inlineCode",{parentName:"li"},"attachment")," by default."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"status")," (",(0,l.kt)("em",{parentName:"li"},"String"),", optional) - step status, ",(0,l.kt)("inlineCode",{parentName:"li"},"passed"),' by default. Must be "failed", "passed" or "broken"'))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"startStep(title)")," - start with a step",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"title")," (",(0,l.kt)("em",{parentName:"li"},"String"),") - name of the step."))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"endStep(status)")," - end with a step",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"status")," (",(0,l.kt)("em",{parentName:"li"},"String"),", optional) - step status, ",(0,l.kt)("inlineCode",{parentName:"li"},"passed"),' by default. Must be "failed", "passed" or "broken"')))),(0,l.kt)("h3",{id:"usage"},"Usage"),(0,l.kt)("p",null,"Allure Api can be accessed using:"),(0,l.kt)("p",null,"ES5"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const allureReporter = require('@wdio/allure-reporter').default\n")),(0,l.kt)("p",null,"ES6"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"import allureReporter from '@wdio/allure-reporter'\n")),(0,l.kt)("p",null,"Mocha example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"describe('Suite', () => {\n    it('Case', () => {\n        allureReporter.addFeature('Feature')\n    })\n})\n")),(0,l.kt)("h2",{id:"displaying-the-report"},"Displaying the report"),(0,l.kt)("p",null,"The results can be consumed by any of the ",(0,l.kt)("a",{parentName:"p",href:"https://docs.qameta.io/allure#_reporting"},"reporting tools")," offered by Allure. For example:"),(0,l.kt)("h3",{id:"command-line"},"Command-line"),(0,l.kt)("p",null,"Install the ",(0,l.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/allure-commandline"},"Allure command-line tool"),", and process the results directory:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"allure generate [allure_output_dir] && allure open\n")),(0,l.kt)("p",null,"This will generate a report (by default in ",(0,l.kt)("inlineCode",{parentName:"p"},"./allure-report"),"), and open it in your browser."),(0,l.kt)("h3",{id:"autogenerate-report"},"Autogenerate Report"),(0,l.kt)("p",null,"You can also auto generate the report by using the Allure command line tool programmatically. To do so install the package in your project by:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"npm i allure-commandline\n")),(0,l.kt)("p",null,"Then add or extend your ",(0,l.kt)("inlineCode",{parentName:"p"},"onComplete")," hook or create a ",(0,l.kt)("a",{parentName:"p",href:"/docs/customservices"},"custom service")," for this:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"// wdio.conf.js\nconst allure = require('allure-commandline')\n\nexports.config = {\n    // ...\n    onComplete: function() {\n        const reportError = new Error('Could not generate Allure report')\n        const generation = allure(['generate', 'allure-results', '--clean'])\n        return new Promise((resolve, reject) => {\n            const generationTimeout = setTimeout(\n                () => reject(reportError),\n                5000)\n\n            generation.on('exit', function(exitCode) {\n                clearTimeout(generationTimeout)\n\n                if (exitCode !== 0) {\n                    return reject(reportError)\n                }\n\n                console.log('Allure report successfully generated')\n                resolve()\n            })\n        })\n    }\n    // ...\n}\n")),(0,l.kt)("h3",{id:"jenkins"},"Jenkins"),(0,l.kt)("p",null,"Install and configure the ",(0,l.kt)("a",{parentName:"p",href:"https://docs.qameta.io/allure#_jenkins"},"Allure Jenkins plugin")),(0,l.kt)("h2",{id:"add-screenshots"},"Add Screenshots"),(0,l.kt)("p",null,"Screenshots can be attached to the report by using the ",(0,l.kt)("inlineCode",{parentName:"p"},"takeScreenshot")," function from WebDriverIO in the ",(0,l.kt)("inlineCode",{parentName:"p"},"afterStep")," hook.\nFirst set ",(0,l.kt)("inlineCode",{parentName:"p"},"disableWebdriverScreenshotsReporting: false")," in reporter options, then add in afterStep hook:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="wdio.conf.js"',title:'"wdio.conf.js"'},"afterStep: function (test, scenario, { error, duration, passed }) {\n  if (error) {\n    browser.takeScreenshot();\n  }\n}\n")),(0,l.kt)("p",null,"As shown in the example above, when this function is called, a screenshot image will be attached to the allure report."))}c.isMDXComponent=!0},5956:function(e,t,n){t.Z=n.p+"assets/images/allure-bb6c9b036b07594235a5aca5aff5ac43.png"}}]);