"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9279],{4137:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return c}});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),m=p(n),c=i,k=m["".concat(s,".").concat(c)]||m[c]||d[c]||r;return n?a.createElement(k,l(l({ref:t},u),{},{components:n})):a.createElement(k,l({ref:t},u))}));function c(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,l=new Array(r);l[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var p=2;p<r;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1369:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return u},default:function(){return m}});var a=n(7462),i=n(3366),r=(n(7294),n(4137)),l=["components"],o={id:"options",title:"Options"},s=void 0,p={unversionedId:"options",id:"options",isDocsHomePage:!1,title:"Options",description:"Based on the setup type (e.g. using the raw protocol bindings, WebdriverIO as standalone package or the WDIO testrunner) there is a different set of options available to control the environment.",source:"@site/docs/Options.md",sourceDirName:".",slug:"/options",permalink:"/docs/options",editUrl:"https://github.com/Abhi6722/hackers-hub/edit/main/website/docs/Options.md",tags:[],version:"current",frontMatter:{id:"options",title:"Options"},sidebar:"docs",previous:{title:"Auto-waiting",permalink:"/docs/autowait"},next:{title:"Babel Setup",permalink:"/docs/babel"}},u=[{value:"WebDriver Options",id:"webdriver-options",children:[{value:"protocol",id:"protocol",children:[],level:3},{value:"hostname",id:"hostname",children:[],level:3},{value:"port",id:"port",children:[],level:3},{value:"path",id:"path",children:[],level:3},{value:"queryParams",id:"queryparams",children:[],level:3},{value:"user",id:"user",children:[],level:3},{value:"key",id:"key",children:[],level:3},{value:"capabilities",id:"capabilities",children:[],level:3},{value:"logLevel",id:"loglevel",children:[],level:3},{value:"outputDir",id:"outputdir",children:[],level:3},{value:"connectionRetryTimeout",id:"connectionretrytimeout",children:[],level:3},{value:"connectionRetryCount",id:"connectionretrycount",children:[],level:3},{value:"agent",id:"agent",children:[],level:3},{value:"headers",id:"headers",children:[],level:3},{value:"transformRequest",id:"transformrequest",children:[],level:3},{value:"transformResponse",id:"transformresponse",children:[],level:3},{value:"strictSSL",id:"strictssl",children:[],level:3}],level:2},{value:"WebdriverIO",id:"webdriverio",children:[{value:"automationProtocol",id:"automationprotocol",children:[],level:3},{value:"baseUrl",id:"baseurl",children:[],level:3},{value:"waitforTimeout",id:"waitfortimeout",children:[],level:3},{value:"waitforInterval",id:"waitforinterval",children:[],level:3},{value:"region",id:"region",children:[],level:3},{value:"headless",id:"headless",children:[],level:3}],level:2},{value:"Testrunner Options",id:"testrunner-options",children:[{value:"specs",id:"specs",children:[],level:3},{value:"exclude",id:"exclude",children:[],level:3},{value:"suites",id:"suites",children:[],level:3},{value:"capabilities",id:"capabilities-1",children:[],level:3},{value:"maxInstances",id:"maxinstances",children:[],level:3},{value:"maxInstancesPerCapability",id:"maxinstancespercapability",children:[],level:3},{value:"bail",id:"bail",children:[],level:3},{value:"specFileRetries",id:"specfileretries",children:[],level:3},{value:"specFileRetriesDelay",id:"specfileretriesdelay",children:[],level:3},{value:"specFileRetriesDeferred",id:"specfileretriesdeferred",children:[],level:3},{value:"services",id:"services",children:[],level:3},{value:"framework",id:"framework",children:[],level:3},{value:"mochaOpts, jasmineOpts and cucumberOpts",id:"mochaopts-jasmineopts-and-cucumberopts",children:[],level:3},{value:"cucumberFeaturesWithLineNumbers",id:"cucumberfeatureswithlinenumbers",children:[],level:3},{value:"reporters",id:"reporters",children:[],level:3},{value:"reporterSyncInterval",id:"reportersyncinterval",children:[],level:3},{value:"reporterSyncTimeout",id:"reportersynctimeout",children:[],level:3},{value:"execArgv",id:"execargv",children:[],level:3}],level:2},{value:"Hooks",id:"hooks",children:[{value:"onPrepare",id:"onprepare",children:[],level:3},{value:"onWorkerStart",id:"onworkerstart",children:[],level:3},{value:"beforeSession",id:"beforesession",children:[],level:3},{value:"before",id:"before",children:[],level:3},{value:"beforeSuite",id:"beforesuite",children:[],level:3},{value:"beforeHook",id:"beforehook",children:[],level:3},{value:"afterHook",id:"afterhook",children:[],level:3},{value:"beforeTest",id:"beforetest",children:[],level:3},{value:"beforeCommand",id:"beforecommand",children:[],level:3},{value:"afterCommand",id:"aftercommand",children:[],level:3},{value:"afterTest",id:"aftertest",children:[],level:3},{value:"afterSuite",id:"aftersuite",children:[],level:3},{value:"after",id:"after",children:[],level:3},{value:"afterSession",id:"aftersession",children:[],level:3},{value:"onComplete",id:"oncomplete",children:[],level:3},{value:"onReload",id:"onreload",children:[],level:3},{value:"beforeFeature",id:"beforefeature",children:[],level:3},{value:"afterFeature",id:"afterfeature",children:[],level:3},{value:"beforeScenario",id:"beforescenario",children:[],level:3},{value:"afterScenario",id:"afterscenario",children:[],level:3},{value:"beforeStep",id:"beforestep",children:[],level:3},{value:"afterStep",id:"afterstep",children:[],level:3}],level:2}],d={toc:u};function m(e){var t=e.components,n=(0,i.Z)(e,l);return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Based on the ",(0,r.kt)("a",{parentName:"p",href:"/docs/setuptypes"},"setup type")," (e.g. using the raw protocol bindings, WebdriverIO as standalone package or the WDIO testrunner) there is a different set of options available to control the environment."),(0,r.kt)("h2",{id:"webdriver-options"},"WebDriver Options"),(0,r.kt)("p",null,"The following options are defined when using the ",(0,r.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/webdriver"},(0,r.kt)("inlineCode",{parentName:"a"},"webdriver"))," protocol package:"),(0,r.kt)("h3",{id:"protocol"},"protocol"),(0,r.kt)("p",null,"Protocol to use when communicating with the driver server."),(0,r.kt)("p",null,"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"String"),(0,r.kt)("br",null),"\nDefault: ",(0,r.kt)("inlineCode",{parentName:"p"},"http")),(0,r.kt)("h3",{id:"hostname"},"hostname"),(0,r.kt)("p",null,"Host of your driver server."),(0,r.kt)("p",null,"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"String"),(0,r.kt)("br",null),"\nDefault: ",(0,r.kt)("inlineCode",{parentName:"p"},"localhost")),(0,r.kt)("h3",{id:"port"},"port"),(0,r.kt)("p",null,"Port your driver server is on."),(0,r.kt)("p",null,"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"Number"),(0,r.kt)("br",null),"\nDefault: ",(0,r.kt)("inlineCode",{parentName:"p"},"4444")),(0,r.kt)("h3",{id:"path"},"path"),(0,r.kt)("p",null,"Path to driver server endpoint."),(0,r.kt)("p",null,"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"String"),(0,r.kt)("br",null),"\nDefault: ",(0,r.kt)("inlineCode",{parentName:"p"},"/")),(0,r.kt)("h3",{id:"queryparams"},"queryParams"),(0,r.kt)("p",null,"Query parameters that are propagated to the driver server."),(0,r.kt)("p",null,"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"Object"),(0,r.kt)("br",null),"\nDefault: ",(0,r.kt)("inlineCode",{parentName:"p"},"null")),(0,r.kt)("h3",{id:"user"},"user"),(0,r.kt)("p",null,"Your cloud service username (only works for ",(0,r.kt)("a",{parentName:"p",href:"https://saucelabs.com"},"Sauce Labs"),", ",(0,r.kt)("a",{parentName:"p",href:"https://www.browserstack.com"},"Browserstack"),", ",(0,r.kt)("a",{parentName:"p",href:"https://testingbot.com"},"TestingBot"),", ",(0,r.kt)("a",{parentName:"p",href:"https://crossbrowsertesting.com"},"CrossBrowserTesting")," or ",(0,r.kt)("a",{parentName:"p",href:"https://www.lambdatest.com"},"LambdaTest")," accounts). If set, WebdriverIO will automatically set connection options for you. If you don't use a cloud provider this can be used to authenticate any other WebDriver backend."),(0,r.kt)("p",null,"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"String"),(0,r.kt)("br",null),"\nDefault: ",(0,r.kt)("inlineCode",{parentName:"p"},"null")),(0,r.kt)("h3",{id:"key"},"key"),(0,r.kt)("p",null,"Your cloud service access key or secret key (only works for ",(0,r.kt)("a",{parentName:"p",href:"https://saucelabs.com"},"Sauce Labs"),", ",(0,r.kt)("a",{parentName:"p",href:"https://www.browserstack.com"},"Browserstack"),", ",(0,r.kt)("a",{parentName:"p",href:"https://testingbot.com"},"TestingBot"),", ",(0,r.kt)("a",{parentName:"p",href:"https://crossbrowsertesting.com"},"CrossBrowserTesting")," or ",(0,r.kt)("a",{parentName:"p",href:"https://www.lambdatest.com"},"LambdaTest")," accounts). If set, WebdriverIO will automatically set connection options for you. If you don't use a cloud provider this can be used to authenticate any other WebDriver backend."),(0,r.kt)("p",null,"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"String"),(0,r.kt)("br",null),"\nDefault: ",(0,r.kt)("inlineCode",{parentName:"p"},"null")),(0,r.kt)("h3",{id:"capabilities"},"capabilities"),(0,r.kt)("p",null,"Defines the capabilities you want to run in your WebDriver session. Check out the ",(0,r.kt)("a",{parentName:"p",href:"https://w3c.github.io/webdriver/#capabilities"},"WebDriver Protocol")," for more details. If you run an older driver that doesn't support the WebDriver protocol, you\u2019ll need to use the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/SeleniumHQ/selenium/wiki/DesiredCapabilities"},"JSONWireProtocol capabilities")," to successfully run a session."),(0,r.kt)("p",null,"Next to the WebDriver based capabilities you can apply browser and vendor specific options that allow deeper configuration to the remote browser or device. These are documented in the corresponding vendor docs, e.g.:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"goog:chromeOptions"),": for ",(0,r.kt)("a",{parentName:"li",href:"https://chromedriver.chromium.org/capabilities#h.p_ID_106"},"Google Chrome")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"moz:firefoxOptions"),": for ",(0,r.kt)("a",{parentName:"li",href:"https://firefox-source-docs.mozilla.org/testing/geckodriver/Capabilities.html"},"Mozilla Firefox")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"ms:edgeOptions"),": for ",(0,r.kt)("a",{parentName:"li",href:"https://docs.microsoft.com/en-us/microsoft-edge/webdriver-chromium/capabilities-edge-options#using-the-edgeoptions-class"},"Microsoft Edge")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"sauce:options"),": for ",(0,r.kt)("a",{parentName:"li",href:"https://docs.saucelabs.com/dev/test-configuration-options/#desktop-and-mobile-capabilities-sauce-specific--optional"},"Sauce Labs")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"bstack:options"),": for ",(0,r.kt)("a",{parentName:"li",href:"https://www.browserstack.com/automate/capabilities?tag=selenium-4#"},"BrowserStack")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"selenoid:options"),": for ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/aerokube/selenoid/blob/master/docs/special-capabilities.adoc"},"Selenoid"))),(0,r.kt)("p",null,"Additionally, a useful utility is the Sauce Labs ",(0,r.kt)("a",{parentName:"p",href:"https://wiki.saucelabs.com/display/DOCS/Platform+Configurator#/"},"Automated Test Configurator"),", which helps you create this object by clicking together your desired capabilities."),(0,r.kt)("p",null,"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"Object"),(0,r.kt)("br",null),"\nDefault: ",(0,r.kt)("inlineCode",{parentName:"p"},"null")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"{\n    browserName: 'chrome', // options: `firefox`, `chrome`, `opera`, `safari`\n    browserVersion: '27.0', // browser version\n    platformName: 'Windows 10' // OS platform\n}\n")),(0,r.kt)("p",null,"If you\u2019re running web or native tests on mobile devices, ",(0,r.kt)("inlineCode",{parentName:"p"},"capabilities")," differs from the WebDriver protocol. See the ",(0,r.kt)("a",{parentName:"p",href:"http://appium.io/docs/en/writing-running-appium/caps/"},"Appium Docs")," for more details."),(0,r.kt)("h3",{id:"loglevel"},"logLevel"),(0,r.kt)("p",null,"Level of logging verbosity."),(0,r.kt)("p",null,"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"String"),(0,r.kt)("br",null),"\nDefault: ",(0,r.kt)("inlineCode",{parentName:"p"},"info"),(0,r.kt)("br",null),"\nOptions: ",(0,r.kt)("inlineCode",{parentName:"p"},"trace")," | ",(0,r.kt)("inlineCode",{parentName:"p"},"debug")," | ",(0,r.kt)("inlineCode",{parentName:"p"},"info")," | ",(0,r.kt)("inlineCode",{parentName:"p"},"warn")," | ",(0,r.kt)("inlineCode",{parentName:"p"},"error")," | ",(0,r.kt)("inlineCode",{parentName:"p"},"silent")),(0,r.kt)("h3",{id:"outputdir"},"outputDir"),(0,r.kt)("p",null,"Directory to store all testrunner log files (including reporter logs and ",(0,r.kt)("inlineCode",{parentName:"p"},"wdio")," logs). If not set, all logs are streamed to ",(0,r.kt)("inlineCode",{parentName:"p"},"stdout"),". Since most reporters are made to log to ",(0,r.kt)("inlineCode",{parentName:"p"},"stdout"),", it is recommended to only use this option for specific reporters where it makes more sense to push report into a file (like the ",(0,r.kt)("inlineCode",{parentName:"p"},"junit")," reporter, for example)."),(0,r.kt)("p",null,"When running in standalone mode, the only log generated by WebdriverIO will be the ",(0,r.kt)("inlineCode",{parentName:"p"},"wdio")," log."),(0,r.kt)("p",null,"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"String"),(0,r.kt)("br",null),"\nDefault: ",(0,r.kt)("inlineCode",{parentName:"p"},"null")),(0,r.kt)("h3",{id:"connectionretrytimeout"},"connectionRetryTimeout"),(0,r.kt)("p",null,"Timeout for any WebDriver request to a driver or grid."),(0,r.kt)("p",null,"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"Number"),(0,r.kt)("br",null),"\nDefault: ",(0,r.kt)("inlineCode",{parentName:"p"},"120000")),(0,r.kt)("h3",{id:"connectionretrycount"},"connectionRetryCount"),(0,r.kt)("p",null,"Maximum count of request retries to the Selenium server."),(0,r.kt)("p",null,"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"Number"),(0,r.kt)("br",null),"\nDefault: ",(0,r.kt)("inlineCode",{parentName:"p"},"3")),(0,r.kt)("h3",{id:"agent"},"agent"),(0,r.kt)("p",null,"Allows you to use a custom",(0,r.kt)("inlineCode",{parentName:"p"}," http"),"/",(0,r.kt)("inlineCode",{parentName:"p"},"https"),"/",(0,r.kt)("inlineCode",{parentName:"p"},"http2")," ",(0,r.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/got#agent"},"agent")," to make requests."),(0,r.kt)("p",null,"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"Object"),(0,r.kt)("br",null),"\nDefault:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"{\n    http: new http.Agent({ keepAlive: true }),\n    https: new https.Agent({ keepAlive: true })\n}\n")),(0,r.kt)("h3",{id:"headers"},"headers"),(0,r.kt)("p",null,"Specify custom ",(0,r.kt)("inlineCode",{parentName:"p"},"headers")," to pass into every WebDriver request."),(0,r.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"These headers ",(0,r.kt)("strong",{parentName:"p"},"aren't")," passed into browser request. If you are looking for modifying request headers of browser requests, please get involved in ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/webdriverio/webdriverio/issues/6361"},"#6361"),"!"))),(0,r.kt)("p",null,"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"Object"),(0,r.kt)("br",null),"\nDefault: ",(0,r.kt)("inlineCode",{parentName:"p"},"{}")),(0,r.kt)("h3",{id:"transformrequest"},"transformRequest"),(0,r.kt)("p",null,"Function intercepting ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/sindresorhus/got#options"},"HTTP request options")," before a WebDriver request is made"),(0,r.kt)("p",null,"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"(RequestOptions) => RequestOptions"),(0,r.kt)("br",null),"\nDefault: ",(0,r.kt)("em",{parentName:"p"},"none")),(0,r.kt)("h3",{id:"transformresponse"},"transformResponse"),(0,r.kt)("p",null,"Function intercepting HTTP response objects after a WebDriver response has arrived. The function is passed the original response object as the first and the corresponding ",(0,r.kt)("inlineCode",{parentName:"p"},"RequestOptions")," as the second argument."),(0,r.kt)("p",null,"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"(Response, RequestOptions) => Response"),(0,r.kt)("br",null),"\nDefault: ",(0,r.kt)("em",{parentName:"p"},"none")),(0,r.kt)("h3",{id:"strictssl"},"strictSSL"),(0,r.kt)("p",null,"Whether it does not require SSL certificate to be valid.\nIt can be set via an environment variables as ",(0,r.kt)("inlineCode",{parentName:"p"},"STRICT_SSL")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"strict_ssl"),"."),(0,r.kt)("p",null,"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"Boolean"),(0,r.kt)("br",null),"\nDefault: ",(0,r.kt)("inlineCode",{parentName:"p"},"true")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"webdriverio"},"WebdriverIO"),(0,r.kt)("p",null,"The following options (including the ones listed above) can be used with WebdriverIO in standalone:"),(0,r.kt)("h3",{id:"automationprotocol"},"automationProtocol"),(0,r.kt)("p",null,"Define the protocol you want to use for your browser automation. Currently only ",(0,r.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/webdriver"},(0,r.kt)("inlineCode",{parentName:"a"},"webdriver"))," and ",(0,r.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/devtools"},(0,r.kt)("inlineCode",{parentName:"a"},"devtools"))," are supported, as these are the main browser automation technologies available."),(0,r.kt)("p",null,"If you want to automate the browser using ",(0,r.kt)("inlineCode",{parentName:"p"},"devtools"),", make sure you have the NPM package installed (",(0,r.kt)("inlineCode",{parentName:"p"},"$ npm install --save-dev devtools"),")."),(0,r.kt)("p",null,"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"String"),(0,r.kt)("br",null),"\nDefault: ",(0,r.kt)("inlineCode",{parentName:"p"},"webdriver")),(0,r.kt)("h3",{id:"baseurl"},"baseUrl"),(0,r.kt)("p",null,"Shorten ",(0,r.kt)("inlineCode",{parentName:"p"},"url")," command calls by setting a base URL."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"If your ",(0,r.kt)("inlineCode",{parentName:"li"},"url")," parameter starts with ",(0,r.kt)("inlineCode",{parentName:"li"},"/"),", then ",(0,r.kt)("inlineCode",{parentName:"li"},"baseUrl")," is prepended (except the ",(0,r.kt)("inlineCode",{parentName:"li"},"baseUrl")," path, if it has one)."),(0,r.kt)("li",{parentName:"ul"},"If your ",(0,r.kt)("inlineCode",{parentName:"li"},"url")," parameter starts without a scheme or ",(0,r.kt)("inlineCode",{parentName:"li"},"/")," (like ",(0,r.kt)("inlineCode",{parentName:"li"},"some/path"),"), then the full ",(0,r.kt)("inlineCode",{parentName:"li"},"baseUrl")," is prepended directly.")),(0,r.kt)("p",null,"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"String"),(0,r.kt)("br",null),"\nDefault: ",(0,r.kt)("inlineCode",{parentName:"p"},"null")),(0,r.kt)("h3",{id:"waitfortimeout"},"waitforTimeout"),(0,r.kt)("p",null,"Default timeout for all ",(0,r.kt)("inlineCode",{parentName:"p"},"waitFor*")," commands. (Note the lowercase ",(0,r.kt)("inlineCode",{parentName:"p"},"f")," in the option name.) This timeout ",(0,r.kt)("strong",{parentName:"p"},"only")," affects commands starting with ",(0,r.kt)("inlineCode",{parentName:"p"},"waitFor*")," and their default wait time."),(0,r.kt)("p",null,"To increase the timeout for a ",(0,r.kt)("em",{parentName:"p"},"test"),", please see the framework docs."),(0,r.kt)("p",null,"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"Number"),(0,r.kt)("br",null),"\nDefault: ",(0,r.kt)("inlineCode",{parentName:"p"},"3000")),(0,r.kt)("h3",{id:"waitforinterval"},"waitforInterval"),(0,r.kt)("p",null,"Default interval for all ",(0,r.kt)("inlineCode",{parentName:"p"},"waitFor*")," commands to check if an expected state (e.g., visibility) has been changed."),(0,r.kt)("p",null,"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"Number"),(0,r.kt)("br",null),"\nDefault: ",(0,r.kt)("inlineCode",{parentName:"p"},"500")),(0,r.kt)("h3",{id:"region"},"region"),(0,r.kt)("p",null,"If running on Sauce Labs, you can choose to run tests between different datacenters: US or EU.\nTo change your region to EU, add ",(0,r.kt)("inlineCode",{parentName:"p"},"region: 'eu'")," to your config."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Note:")," This only has an effect if you provide ",(0,r.kt)("inlineCode",{parentName:"p"},"user")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"key")," options that are connected to your Sauce Labs account."),(0,r.kt)("p",null,"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"String"),(0,r.kt)("br",null),"\nDefault: ",(0,r.kt)("inlineCode",{parentName:"p"},"us")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"(only for vm and or em/simulators)")),(0,r.kt)("h3",{id:"headless"},"headless"),(0,r.kt)("p",null,"Sauce Labs provides a ",(0,r.kt)("a",{parentName:"p",href:"https://saucelabs.com/products/web-testing/sauce-headless-testing"},"headless offering")," that allows you to run Chrome and Firefox tests headless."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Note:")," This only has an effect if you provide ",(0,r.kt)("inlineCode",{parentName:"p"},"user")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"key")," options that are connected to your Sauce Labs account."),(0,r.kt)("p",null,"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"Boolean"),(0,r.kt)("br",null),"\nDefault: ",(0,r.kt)("inlineCode",{parentName:"p"},"false")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"(only for VM or EM/simulators)")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"testrunner-options"},"Testrunner Options"),(0,r.kt)("p",null,"The following options (including the ones listed above) are defined only for running WebdriverIO with the WDIO testrunner:"),(0,r.kt)("h3",{id:"specs"},"specs"),(0,r.kt)("p",null,"Define specs for test execution. You can either specify a glob pattern to match multiple files at once or wrap a glob or set of paths into an array to run them within a single worker process."),(0,r.kt)("p",null,"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"(String | String[])[]"),(0,r.kt)("br",null),"\nDefault: ",(0,r.kt)("inlineCode",{parentName:"p"},"[]")),(0,r.kt)("h3",{id:"exclude"},"exclude"),(0,r.kt)("p",null,"Exclude specs from test execution."),(0,r.kt)("p",null,"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"String[]"),(0,r.kt)("br",null),"\nDefault: ",(0,r.kt)("inlineCode",{parentName:"p"},"[]")),(0,r.kt)("h3",{id:"suites"},"suites"),(0,r.kt)("p",null,"An object describing various of suites, which you can then specify with the ",(0,r.kt)("inlineCode",{parentName:"p"},"--suite")," option on the ",(0,r.kt)("inlineCode",{parentName:"p"},"wdio")," CLI."),(0,r.kt)("p",null,"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"Object"),(0,r.kt)("br",null),"\nDefault: ",(0,r.kt)("inlineCode",{parentName:"p"},"{}")),(0,r.kt)("h3",{id:"capabilities-1"},"capabilities"),(0,r.kt)("p",null,"The same as the ",(0,r.kt)("inlineCode",{parentName:"p"},"capabilities")," section described above, except with the option to specify either a ",(0,r.kt)("a",{parentName:"p",href:"/docs/multiremote"},(0,r.kt)("inlineCode",{parentName:"a"},"multiremote"))," object, or multiple WebDriver sessions in an array for parallel execution."),(0,r.kt)("p",null,"You can apply the same vendor and browser specific capabilities as defined ",(0,r.kt)("a",{parentName:"p",href:"/docs/options#capabilities"},"above"),"."),(0,r.kt)("p",null,"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"Object"),"|",(0,r.kt)("inlineCode",{parentName:"p"},"Object[]"),(0,r.kt)("br",null),"\nDefault: ",(0,r.kt)("inlineCode",{parentName:"p"},"[{ maxInstances: 5, browserName: 'firefox' }]")),(0,r.kt)("h3",{id:"maxinstances"},"maxInstances"),(0,r.kt)("p",null,"Maximum number of total parallel running workers."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Note:")," that it may be a number as high as ",(0,r.kt)("inlineCode",{parentName:"p"},"100"),", when the tests are being performed on some external vendors such as Sauce Labs's machines. There, the tests are not tested on a single machine, but rather, on multiple VMs. If the tests are to be run on a local development machine, use a number that is more reasonable, such as ",(0,r.kt)("inlineCode",{parentName:"p"},"3"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"4"),", or ",(0,r.kt)("inlineCode",{parentName:"p"},"5"),". Essentially, this is the number of browsers that will be concurrently started and running your tests at the same time, so it depends on how much RAM there is on your machine, and how many other apps are running on your machine."),(0,r.kt)("p",null,"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"Number"),(0,r.kt)("br",null),"\nDefault: ",(0,r.kt)("inlineCode",{parentName:"p"},"100")),(0,r.kt)("h3",{id:"maxinstancespercapability"},"maxInstancesPerCapability"),(0,r.kt)("p",null,"Maximum number of total parallel running workers per capability."),(0,r.kt)("p",null,"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"Number"),(0,r.kt)("br",null),"\nDefault: ",(0,r.kt)("inlineCode",{parentName:"p"},"100")),(0,r.kt)("h3",{id:"bail"},"bail"),(0,r.kt)("p",null,"If you want your test run to stop after a specific number of test failures, use ",(0,r.kt)("inlineCode",{parentName:"p"},"bail"),".\n(It defaults to ",(0,r.kt)("inlineCode",{parentName:"p"},"0"),", which runs all tests no matter what.) ",(0,r.kt)("strong",{parentName:"p"},"Note:")," Please be aware that when using a third party test runner (such as Mocha), additional configuration might be required."),(0,r.kt)("p",null,"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"Number"),(0,r.kt)("br",null),"\nDefault: ",(0,r.kt)("inlineCode",{parentName:"p"},"0")," (don't bail; run all tests)"),(0,r.kt)("h3",{id:"specfileretries"},"specFileRetries"),(0,r.kt)("p",null,"The number of times to retry an entire specfile when it fails as a whole."),(0,r.kt)("p",null,"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"Number"),(0,r.kt)("br",null),"\nDefault: ",(0,r.kt)("inlineCode",{parentName:"p"},"0")),(0,r.kt)("h3",{id:"specfileretriesdelay"},"specFileRetriesDelay"),(0,r.kt)("p",null,"Delay in seconds between the spec file retry attempts"),(0,r.kt)("p",null,"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"Number"),(0,r.kt)("br",null),"\nDefault: ",(0,r.kt)("inlineCode",{parentName:"p"},"0")),(0,r.kt)("h3",{id:"specfileretriesdeferred"},"specFileRetriesDeferred"),(0,r.kt)("p",null,"Whether or not retried specfiles should be retried immediately or deferred to the end of the queue."),(0,r.kt)("p",null,"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"Boolean"),(0,r.kt)("br",null),"\nDefault: ",(0,r.kt)("inlineCode",{parentName:"p"},"true")),(0,r.kt)("h3",{id:"services"},"services"),(0,r.kt)("p",null,"Services take over a specific job you don't want to take care of. They enhance your test setup with almost no effort."),(0,r.kt)("p",null,"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"String[]|Object[]"),(0,r.kt)("br",null),"\nDefault: ",(0,r.kt)("inlineCode",{parentName:"p"},"[]")),(0,r.kt)("h3",{id:"framework"},"framework"),(0,r.kt)("p",null,"Defines the test framework to be used by the WDIO testrunner."),(0,r.kt)("p",null,"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"String"),(0,r.kt)("br",null),"\nDefault: ",(0,r.kt)("inlineCode",{parentName:"p"},"mocha"),(0,r.kt)("br",null),"\nOptions: ",(0,r.kt)("inlineCode",{parentName:"p"},"mocha")," | ",(0,r.kt)("inlineCode",{parentName:"p"},"jasmine")),(0,r.kt)("h3",{id:"mochaopts-jasmineopts-and-cucumberopts"},"mochaOpts, jasmineOpts and cucumberOpts"),(0,r.kt)("p",null,"Specific framework-related options. See the framework adapter documentation on which options are available. Read more on this in ",(0,r.kt)("a",{parentName:"p",href:"/docs/frameworks"},"Frameworks"),"."),(0,r.kt)("p",null,"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"Object"),(0,r.kt)("br",null),"\nDefault: ",(0,r.kt)("inlineCode",{parentName:"p"},"{ timeout: 10000 }")),(0,r.kt)("h3",{id:"cucumberfeatureswithlinenumbers"},"cucumberFeaturesWithLineNumbers"),(0,r.kt)("p",null,"List of cucumber features with line numbers (when ",(0,r.kt)("a",{parentName:"p",href:"/docs/frameworks#using-cucumber"},"using cucumber framework"),")."),(0,r.kt)("p",null,"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"String[]"),"\nDefault: ",(0,r.kt)("inlineCode",{parentName:"p"},"[]")),(0,r.kt)("h3",{id:"reporters"},"reporters"),(0,r.kt)("p",null,"List of reporters to use. A reporter can be either a string, or an array of\n",(0,r.kt)("inlineCode",{parentName:"p"},"['reporterName', { /* reporter options */}]")," where the first element is a string with the reporter name and the second element an object with reporter options."),(0,r.kt)("p",null,"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"String[]|Object[]"),(0,r.kt)("br",null),"\nDefault: ",(0,r.kt)("inlineCode",{parentName:"p"},"[]")),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"reporters: [\n    'dot',\n    'spec'\n    ['junit', {\n        outputDir: `${__dirname}/reports`,\n        otherOption: 'foobar'\n    }]\n]\n")),(0,r.kt)("h3",{id:"reportersyncinterval"},"reporterSyncInterval"),(0,r.kt)("p",null,"Determines in which interval the reporter should check if they are synchronized if they report their logs asynchronously (e.g. if logs are streamed to a 3rd party vendor)."),(0,r.kt)("p",null,"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"Number"),(0,r.kt)("br",null),"\nDefault: ",(0,r.kt)("inlineCode",{parentName:"p"},"100")," (ms)"),(0,r.kt)("h3",{id:"reportersynctimeout"},"reporterSyncTimeout"),(0,r.kt)("p",null,"Determines the maximum time reporters have to finish uploading all their logs until an error is being thrown by the testrunner."),(0,r.kt)("p",null,"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"Number"),(0,r.kt)("br",null),"\nDefault: ",(0,r.kt)("inlineCode",{parentName:"p"},"5000")," (ms)"),(0,r.kt)("h3",{id:"execargv"},"execArgv"),(0,r.kt)("p",null,"Node arguments to specify when launching child processes."),(0,r.kt)("p",null,"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"String[]"),"\nDefault: ",(0,r.kt)("inlineCode",{parentName:"p"},"null")),(0,r.kt)("h2",{id:"hooks"},"Hooks"),(0,r.kt)("p",null,"The WDIO testrunner allows you to set hooks to be triggered at specific times of the test lifecycle. This allows custom actions (e.g. take screenshot if a test fails)."),(0,r.kt)("p",null,"Every hook has as parameter specific information about the lifecycle (e.g. information about the test suite or test). Read more about all hook properties in ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/webdriverio/webdriverio/blob/master/examples/wdio.conf.js#L183-L326"},"our example config"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Note:")," Some hooks (",(0,r.kt)("inlineCode",{parentName:"p"},"onPrepare"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"onWorkerStart")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"onComplete"),") are executed in a different process and therefore can not share any global data with the other hooks that live in the worker process."),(0,r.kt)("h3",{id:"onprepare"},"onPrepare"),(0,r.kt)("p",null,"Gets executed once before all workers get launched."),(0,r.kt)("p",null,"Parameters:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"config")," (",(0,r.kt)("inlineCode",{parentName:"li"},"object"),"): WebdriverIO configuration object"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"param")," (",(0,r.kt)("inlineCode",{parentName:"li"},"object[]"),"): list of capabilities details")),(0,r.kt)("h3",{id:"onworkerstart"},"onWorkerStart"),(0,r.kt)("p",null,"Gets executed before a worker process is spawned and can be used to initialize specific service for that worker as well as modify runtime environments in an async fashion."),(0,r.kt)("p",null,"Parameters:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"cid")," (",(0,r.kt)("inlineCode",{parentName:"li"},"string"),"): capability id (e.g 0-0)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"caps")," (",(0,r.kt)("inlineCode",{parentName:"li"},"object"),"): containing capabilities for session that will be spawn in the worker"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"specs")," (",(0,r.kt)("inlineCode",{parentName:"li"},"string[]"),"): specs to be run in the worker process"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"args")," (",(0,r.kt)("inlineCode",{parentName:"li"},"object"),"): object that will be merged with the main configuration once worker is initialized"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"execArgv")," (",(0,r.kt)("inlineCode",{parentName:"li"},"string[]"),"): list of string arguments passed to the worker process")),(0,r.kt)("h3",{id:"beforesession"},"beforeSession"),(0,r.kt)("p",null,"Gets executed just before initializing the webdriver session and test framework. It allows you to manipulate configurations depending on the capability or spec."),(0,r.kt)("p",null,"Parameters:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"config")," (",(0,r.kt)("inlineCode",{parentName:"li"},"object"),"): WebdriverIO configuration object"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"caps")," (",(0,r.kt)("inlineCode",{parentName:"li"},"object"),"): containing capabilities for session that will be spawn in the worker"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"specs")," (",(0,r.kt)("inlineCode",{parentName:"li"},"string[]"),"): specs to be run in the worker process")),(0,r.kt)("h3",{id:"before"},"before"),(0,r.kt)("p",null,"Gets executed before test execution begins. At this point you can access to all global variables like ",(0,r.kt)("inlineCode",{parentName:"p"},"browser"),". It is the perfect place to define custom commands."),(0,r.kt)("p",null,"Parameters:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"caps")," (",(0,r.kt)("inlineCode",{parentName:"li"},"object"),"): containing capabilities for session that will be spawn in the worker"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"specs")," (",(0,r.kt)("inlineCode",{parentName:"li"},"string[]"),"): specs to be run in the worker process"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"browser")," (",(0,r.kt)("inlineCode",{parentName:"li"},"object"),"): instance of created browser/device session")),(0,r.kt)("h3",{id:"beforesuite"},"beforeSuite"),(0,r.kt)("p",null,"Hook that gets executed before the suite starts"),(0,r.kt)("p",null,"Parameters:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"suite")," (",(0,r.kt)("inlineCode",{parentName:"li"},"object"),"): suite details")),(0,r.kt)("h3",{id:"beforehook"},"beforeHook"),(0,r.kt)("p",null,"Hook that gets executed ",(0,r.kt)("em",{parentName:"p"},"before")," a hook within the suite starts (e.g. runs before calling beforeEach in Mocha)"),(0,r.kt)("p",null,"Parameters:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"test")," (",(0,r.kt)("inlineCode",{parentName:"li"},"object"),"): test details"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"context")," (",(0,r.kt)("inlineCode",{parentName:"li"},"object"),"): test context (represents World object in Cucumber)")),(0,r.kt)("h3",{id:"afterhook"},"afterHook"),(0,r.kt)("p",null,"Hook that gets executed ",(0,r.kt)("em",{parentName:"p"},"after")," a hook within the suite ends (e.g. runs after calling afterEach in Mocha)"),(0,r.kt)("p",null,"Parameters:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"test")," (",(0,r.kt)("inlineCode",{parentName:"li"},"object"),"): test details"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"context")," (",(0,r.kt)("inlineCode",{parentName:"li"},"object"),"): test context (represents World object in Cucumber)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"result")," (",(0,r.kt)("inlineCode",{parentName:"li"},"object"),"): hook result (contains ",(0,r.kt)("inlineCode",{parentName:"li"},"error"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"result"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"duration"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"passed"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"retries")," properties)")),(0,r.kt)("h3",{id:"beforetest"},"beforeTest"),(0,r.kt)("p",null,"Function to be executed before a test (in Mocha/Jasmine only)."),(0,r.kt)("p",null,"Parameters:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"test")," (",(0,r.kt)("inlineCode",{parentName:"li"},"object"),"): test details"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"context")," (",(0,r.kt)("inlineCode",{parentName:"li"},"object"),"): scope object the test was executed with")),(0,r.kt)("h3",{id:"beforecommand"},"beforeCommand"),(0,r.kt)("p",null,"Runs before a WebdriverIO command gets executed."),(0,r.kt)("p",null,"Parameters:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"commandName")," (",(0,r.kt)("inlineCode",{parentName:"li"},"string"),"): command name"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"args")," (",(0,r.kt)("inlineCode",{parentName:"li"},"*"),"): arguments that command would receive")),(0,r.kt)("h3",{id:"aftercommand"},"afterCommand"),(0,r.kt)("p",null,"Runs after a WebdriverIO command gets executed."),(0,r.kt)("p",null,"Parameters:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"commandName")," (",(0,r.kt)("inlineCode",{parentName:"li"},"string"),"): command name"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"args")," (",(0,r.kt)("inlineCode",{parentName:"li"},"*"),"): arguments that command would receive"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"result")," (",(0,r.kt)("inlineCode",{parentName:"li"},"number"),"): 0 - command success, 1 - command error"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"error")," (",(0,r.kt)("inlineCode",{parentName:"li"},"Error"),"): error object if any")),(0,r.kt)("h3",{id:"aftertest"},"afterTest"),(0,r.kt)("p",null,"Function to be executed after a test (in Mocha/Jasmine) ends."),(0,r.kt)("p",null,"Parameters:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"test")," (",(0,r.kt)("inlineCode",{parentName:"li"},"object"),"): test details"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"context")," (",(0,r.kt)("inlineCode",{parentName:"li"},"object"),"): scope object the test was executed with"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"result.error")," (",(0,r.kt)("inlineCode",{parentName:"li"},"Error"),"): error object in case the test fails, otherwise ",(0,r.kt)("inlineCode",{parentName:"li"},"undefined")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"result.result")," (",(0,r.kt)("inlineCode",{parentName:"li"},"Any"),"): return object of test function"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"result.duration")," (",(0,r.kt)("inlineCode",{parentName:"li"},"Number"),"): duration of test"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"result.passed")," (",(0,r.kt)("inlineCode",{parentName:"li"},"Boolean"),"): true if test has passed, otherwise false"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"result.retries")," (",(0,r.kt)("inlineCode",{parentName:"li"},"Object"),"): informations to spec related retries, e.g. ",(0,r.kt)("inlineCode",{parentName:"li"},"{ attempts: 0, limit: 0 }")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"result")," (",(0,r.kt)("inlineCode",{parentName:"li"},"object"),"): hook result (contains ",(0,r.kt)("inlineCode",{parentName:"li"},"error"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"result"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"duration"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"passed"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"retries")," properties)")),(0,r.kt)("h3",{id:"aftersuite"},"afterSuite"),(0,r.kt)("p",null,"Hook that gets executed after the suite has ended"),(0,r.kt)("p",null,"Parameters:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"suite")," (",(0,r.kt)("inlineCode",{parentName:"li"},"object"),"): suite details")),(0,r.kt)("h3",{id:"after"},"after"),(0,r.kt)("p",null,"Gets executed after all tests are done. You still have access to all global variables from the test."),(0,r.kt)("p",null,"Parameters:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"result")," (",(0,r.kt)("inlineCode",{parentName:"li"},"number"),"): 0 - test pass, 1 - test fail"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"caps")," (",(0,r.kt)("inlineCode",{parentName:"li"},"object"),"): containing capabilities for session that will be spawn in the worker"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"specs")," (",(0,r.kt)("inlineCode",{parentName:"li"},"string[]"),"): specs to be run in the worker process")),(0,r.kt)("h3",{id:"aftersession"},"afterSession"),(0,r.kt)("p",null,"Gets executed right after terminating the webdriver session."),(0,r.kt)("p",null,"Parameters:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"config")," (",(0,r.kt)("inlineCode",{parentName:"li"},"object"),"): WebdriverIO configuration object"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"caps")," (",(0,r.kt)("inlineCode",{parentName:"li"},"object"),"): containing capabilities for session that will be spawn in the worker"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"specs")," (",(0,r.kt)("inlineCode",{parentName:"li"},"string[]"),"): specs to be run in the worker process")),(0,r.kt)("h3",{id:"oncomplete"},"onComplete"),(0,r.kt)("p",null,"Gets executed after all workers got shut down and the process is about to exit. An error thrown in the onComplete hook will result in the test run failing."),(0,r.kt)("p",null,"Parameters:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"exitCode")," (",(0,r.kt)("inlineCode",{parentName:"li"},"number"),"): 0 - success, 1 - fail"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"config")," (",(0,r.kt)("inlineCode",{parentName:"li"},"object"),"): WebdriverIO configuration object"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"caps")," (",(0,r.kt)("inlineCode",{parentName:"li"},"object"),"): containing capabilities for session that will be spawn in the worker"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"result")," (",(0,r.kt)("inlineCode",{parentName:"li"},"object"),"): results object containing test results")),(0,r.kt)("h3",{id:"onreload"},"onReload"),(0,r.kt)("p",null,"Gets executed when a refresh happens."),(0,r.kt)("p",null,"Parameters:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"oldSessionId")," (",(0,r.kt)("inlineCode",{parentName:"li"},"string"),"): session ID of the old session"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"newSessionId")," (",(0,r.kt)("inlineCode",{parentName:"li"},"string"),"): session ID of the new session")),(0,r.kt)("h3",{id:"beforefeature"},"beforeFeature"),(0,r.kt)("p",null,"Runs before a Cucumber Feature."),(0,r.kt)("p",null,"Parameters:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"uri")," (",(0,r.kt)("inlineCode",{parentName:"li"},"string"),"): path to feature file"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"feature")," (",(0,r.kt)("a",{parentName:"li",href:"https://github.com/cucumber/common/blob/b94ce625967581de78d0fc32d84c35b46aa5a075/json-to-messages/javascript/src/cucumber-generic/JSONSchema.ts#L8-L17"},(0,r.kt)("inlineCode",{parentName:"a"},"GherkinDocument.IFeature")),"): Cucumber feature object")),(0,r.kt)("h3",{id:"afterfeature"},"afterFeature"),(0,r.kt)("p",null,"Runs after a Cucumber Feature."),(0,r.kt)("p",null,"Parameters:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"uri")," (",(0,r.kt)("inlineCode",{parentName:"li"},"string"),"): path to feature file"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"feature")," (",(0,r.kt)("a",{parentName:"li",href:"https://github.com/cucumber/common/blob/b94ce625967581de78d0fc32d84c35b46aa5a075/json-to-messages/javascript/src/cucumber-generic/JSONSchema.ts#L8-L17"},(0,r.kt)("inlineCode",{parentName:"a"},"GherkinDocument.IFeature")),"): Cucumber feature object")),(0,r.kt)("h3",{id:"beforescenario"},"beforeScenario"),(0,r.kt)("p",null,"Runs before a Cucumber Scenario."),(0,r.kt)("p",null,"Parameters:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"world")," (",(0,r.kt)("a",{parentName:"li",href:"https://github.com/cucumber/cucumber-js/blob/ac124f7b2be5fa54d904c7feac077a2657b19440/src/support_code_library_builder/types.ts#L10-L15"},(0,r.kt)("inlineCode",{parentName:"a"},"ITestCaseHookParameter")),"): world object containing information on pickle and test step"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"context")," (",(0,r.kt)("inlineCode",{parentName:"li"},"object"),"): Cucumber World object")),(0,r.kt)("h3",{id:"afterscenario"},"afterScenario"),(0,r.kt)("p",null,"Runs after a Cucumber Scenario."),(0,r.kt)("p",null,"Parameters:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"world")," (",(0,r.kt)("a",{parentName:"li",href:"https://github.com/cucumber/cucumber-js/blob/ac124f7b2be5fa54d904c7feac077a2657b19440/src/support_code_library_builder/types.ts#L10-L15"},(0,r.kt)("inlineCode",{parentName:"a"},"ITestCaseHookParameter")),"): world object containing information on pickle and test step"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"result")," (",(0,r.kt)("inlineCode",{parentName:"li"},"object"),"): results object containing scenario results"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"result.passed")," (",(0,r.kt)("inlineCode",{parentName:"li"},"boolean"),"): true if scenario has passed"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"result.error")," (",(0,r.kt)("inlineCode",{parentName:"li"},"string"),"): error stack if scenario failed"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"result.duration")," (",(0,r.kt)("inlineCode",{parentName:"li"},"number"),"): duration of scenario in milliseconds"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"context")," (",(0,r.kt)("inlineCode",{parentName:"li"},"object"),"): Cucumber World object")),(0,r.kt)("h3",{id:"beforestep"},"beforeStep"),(0,r.kt)("p",null,"Runs before a Cucumber Step."),(0,r.kt)("p",null,"Parameters:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"step")," (",(0,r.kt)("a",{parentName:"li",href:"https://github.com/cucumber/common/blob/b94ce625967581de78d0fc32d84c35b46aa5a075/messages/jsonschema/Pickle.json#L20-L49"},(0,r.kt)("inlineCode",{parentName:"a"},"Pickle.IPickleStep")),"): Cucumber step object"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"scenario")," (",(0,r.kt)("a",{parentName:"li",href:"https://github.com/cucumber/common/blob/b94ce625967581de78d0fc32d84c35b46aa5a075/messages/jsonschema/Pickle.json#L137-L175"},(0,r.kt)("inlineCode",{parentName:"a"},"IPickle")),"): Cucumber scenario object"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"context")," (",(0,r.kt)("inlineCode",{parentName:"li"},"object"),"): Cucumber World object")),(0,r.kt)("h3",{id:"afterstep"},"afterStep"),(0,r.kt)("p",null,"Runs after a Cucumber Step."),(0,r.kt)("p",null,"Parameters:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"step")," (",(0,r.kt)("a",{parentName:"li",href:"https://github.com/cucumber/common/blob/b94ce625967581de78d0fc32d84c35b46aa5a075/messages/jsonschema/Pickle.json#L20-L49"},(0,r.kt)("inlineCode",{parentName:"a"},"Pickle.IPickleStep")),"): Cucumber step object"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"scenario")," (",(0,r.kt)("a",{parentName:"li",href:"https://github.com/cucumber/common/blob/b94ce625967581de78d0fc32d84c35b46aa5a075/messages/jsonschema/Pickle.json#L137-L175"},(0,r.kt)("inlineCode",{parentName:"a"},"IPickle")),"): Cucumber scenario object"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"result"),": (",(0,r.kt)("inlineCode",{parentName:"li"},"object"),"): results object containing step results"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"result.passed")," (",(0,r.kt)("inlineCode",{parentName:"li"},"boolean"),"): true if scenario has passed"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"result.error")," (",(0,r.kt)("inlineCode",{parentName:"li"},"string"),"): error stack if scenario failed"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"result.duration")," (",(0,r.kt)("inlineCode",{parentName:"li"},"number"),"): duration of scenario in milliseconds"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"context")," (",(0,r.kt)("inlineCode",{parentName:"li"},"object"),"): Cucumber World object")))}m.isMDXComponent=!0}}]);