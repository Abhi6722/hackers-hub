"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8320],{4137:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=c(n),d=i,h=m["".concat(l,".").concat(d)]||m[d]||u[d]||a;return n?r.createElement(h,o(o({ref:t},p),{},{components:n})):r.createElement(h,o({ref:t},p))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var c=2;c<a;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1296:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return c},assets:function(){return p},toc:function(){return u},default:function(){return d}});var r=n(7462),i=n(3366),a=(n(7294),n(4137)),o=["components"],s={title:"WireMock as a Service",author:"Erwin Heitzman",authorURL:"http://github.com/erwinheitzman",authorImageURL:"https://avatars1.githubusercontent.com/u/15839059?s=80&v=4"},l=void 0,c={permalink:"/blog/2019/12/05/wiremock",editUrl:"https://github.com/Abhi6722/hackers-hub/edit/main/website/blog/blog/2019-12-05-wiremock.md",source:"@site/blog/2019-12-05-wiremock.md",title:"WireMock as a Service",description:"We are pleased to announce that we now have a new mocking service for WebdriverIO called wdio-wiremock-service.",date:"2019-12-05T00:00:00.000Z",formattedDate:"December 5, 2019",tags:[],readingTime:1.97,truncated:!1,authors:[{name:"Erwin Heitzman",url:"http://github.com/erwinheitzman",imageURL:"https://avatars1.githubusercontent.com/u/15839059?s=80&v=4"}],prevItem:{title:"WebdriverIO v6 Released",permalink:"/blog/2020/03/26/webdriverio-v6-released"},nextItem:{title:"Avoid starting session for excluded specs",permalink:"/blog/2019/11/01/spec-filtering"}},p={authorsImageUrls:[void 0]},u=[{value:"What can it do?",id:"what-can-it-do",children:[],level:2},{value:"Installation",id:"installation",children:[],level:2},{value:"Configuration",id:"configuration",children:[],level:2},{value:"Creating mocks and fixtures",id:"creating-mocks-and-fixtures",children:[],level:2},{value:"Writing tests",id:"writing-tests",children:[],level:2}],m={toc:u};function d(e){var t=e.components,n=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"We are pleased to announce that we now have a new mocking service for WebdriverIO called ",(0,a.kt)("inlineCode",{parentName:"p"},"wdio-wiremock-service"),"."),(0,a.kt)("h2",{id:"what-can-it-do"},"What can it do?"),(0,a.kt)("p",null,"This service helps you to run WireMock seamlessly when running tests with ",(0,a.kt)("a",{parentName:"p",href:"https://webdriver.io"},"WebdriverIO"),". It uses the well known ",(0,a.kt)("a",{parentName:"p",href:"https://mvnrepository.com/repos/central"},"Maven")," repository to download the WireMock jar for you which is then automatically installed, started and stopped. Stay up to date by joining the community over at ",(0,a.kt)("a",{parentName:"p",href:"https://gitter.im/erwinheitzman/wdio-wiremock-service"},"Gitter")," for help and support."),(0,a.kt)("p",null,"A few things you can do with this service:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Automatically run ",(0,a.kt)("a",{parentName:"li",href:"http://wiremock.org/"},"WireMock")," alongside the WebdriverIO testrunner"),(0,a.kt)("li",{parentName:"ul"},"Supports usage of mock and fixture files"),(0,a.kt)("li",{parentName:"ul"},"Match request URLs, methods, headers cookies and bodies using a wide variety of strategies. First class support for JSON and XML."),(0,a.kt)("li",{parentName:"ul"},"Configure WireMock with all the available ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/erwinheitzman/wdio-wiremock-service/blob/master/README.md#options"},"options"))),(0,a.kt)("h2",{id:"installation"},"Installation"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"npm install wdio-wiremock-service --save-dev\n")),(0,a.kt)("p",null,"Instructions on how to install ",(0,a.kt)("inlineCode",{parentName:"p"},"WebdriverIO")," can be found ",(0,a.kt)("a",{parentName:"p",href:"https://webdriver.io/docs/gettingstarted.html"},"here.")),(0,a.kt)("h2",{id:"configuration"},"Configuration"),(0,a.kt)("p",null,"In order to use the service you need to add it to your service array:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="wdio.conf.js"',title:'"wdio.conf.js"'},"export.config = {\n  // ...\n  services: ['wiremock'],\n  // ...\n};\n")),(0,a.kt)("p",null,"There are a lot more options that are available for configuration, for a full overview go ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/erwinheitzman/wdio-wiremock-service/blob/master/README.md#options"},"here"),"."),(0,a.kt)("h2",{id:"creating-mocks-and-fixtures"},"Creating mocks and fixtures"),(0,a.kt)("p",null,"The service creates a directory (",(0,a.kt)("inlineCode",{parentName:"p"},"./mock")," by default) with two subdirectories (",(0,a.kt)("inlineCode",{parentName:"p"},"mappings")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"__files"),"). It will use the ",(0,a.kt)("inlineCode",{parentName:"p"},"mappings")," directory to look for mock files and it will use the ",(0,a.kt)("inlineCode",{parentName:"p"},"__files")," directory to look for fixture files."),(0,a.kt)("p",null,"Knowing this, creating a fixture is as easy as creating a file in the ",(0,a.kt)("inlineCode",{parentName:"p"},"__files")," directory:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="./mock/__files/hello-world.json"',title:'"./mock/__files/hello-world.json"'},"Hello world\n")),(0,a.kt)("p",null,"And creating your first mock is as simple as creating a file in the ",(0,a.kt)("inlineCode",{parentName:"p"},"mappings")," directory:"),(0,a.kt)("p",null,"Knowing this, creating a fixture is as easy as creating a file in the ",(0,a.kt)("inlineCode",{parentName:"p"},"__files")," directory:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="./mock/mappings/my-test.json"',title:'"./mock/mappings/my-test.json"'},'{\n  "request": {\n      "method": "GET",\n      "url": "/api/mytest"\n  },\n  "response": {\n      "status": 200,\n      "bodyFileName": "hello-world.json"\n  }\n}\n')),(0,a.kt)("h2",{id:"writing-tests"},"Writing tests"),(0,a.kt)("p",null,"Writing your first test is really straight forward:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="./test/specs/mytest.js"',title:'"./test/specs/mytest.js"'},"const fetch = require('node-fetch');\nconst assert = require('assert');\n\ndescribe('My test', () => {\n  it('should assert the mock data', () => {\n    browser.call(async () => {\n      await fetch('http://localhost:8080/api/mytest')\n        .then((res) => res.text())\n        .then((body) => {\n            // assert that the request body returns the expected value\n            assert.equal(body, 'More content');\n        });\n    });\n  });\n});\n")),(0,a.kt)("h1",{id:"support"},"Support"),(0,a.kt)("p",null,"Stay up to date by joining the community over at ",(0,a.kt)("a",{parentName:"p",href:"https://gitter.im/erwinheitzman/wdio-wiremock-service"},"Gitter")," to join others and for support and questions."),(0,a.kt)("p",null,"See you there!"))}d.isMDXComponent=!0}}]);