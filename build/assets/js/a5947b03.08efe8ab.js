"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4935],{4137:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return d}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),u=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},c=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=u(r),d=a,f=m["".concat(s,".").concat(d)]||m[d]||p[d]||o;return r?n.createElement(f,l(l({ref:t},c),{},{components:r})):n.createElement(f,l({ref:t},c))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,l=new Array(o);l[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var u=2;u<o;u++)l[u]=r[u];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},8448:function(e,t,r){var n=r(7294);t.Z=function(e){var t=e.children,r=e.hidden,a=e.className;return n.createElement("div",{role:"tabpanel",hidden:r,className:a},t)}},7225:function(e,t,r){r.d(t,{Z:function(){return m}});var n=r(7462),a=r(7294),o=r(1048),l=r(2713);var i=function(){var e=(0,a.useContext)(l.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},s=r(3309),u=r(6010),c="tabItem_vU9c";function p(e){var t,r,n,o=e.lazy,l=e.block,p=e.defaultValue,m=e.values,d=e.groupId,f=e.className,v=a.Children.map(e.children,(function(e){if((0,a.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),h=null!=m?m:v.map((function(e){var t=e.props;return{value:t.value,label:t.label}})),b=(0,s.lx)(h,(function(e,t){return e.value===t.value}));if(b.length>0)throw new Error('Docusaurus error: Duplicate values "'+b.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var y=null===p?p:null!=(t=null!=p?p:null==(r=v.find((function(e){return e.props.default})))?void 0:r.props.value)?t:null==(n=v[0])?void 0:n.props.value;if(null!==y&&!h.some((function(e){return e.value===y})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+y+'" but none of its children has the corresponding value. Available values are: '+h.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var k=i(),w=k.tabGroupChoices,g=k.setTabGroupChoices,N=(0,a.useState)(y),E=N[0],O=N[1],T=[],x=(0,s.o5)().blockElementScrollPositionUntilNextRender;if(null!=d){var C=w[d];null!=C&&C!==E&&h.some((function(e){return e.value===C}))&&O(C)}var j=function(e){var t=e.currentTarget,r=T.indexOf(t),n=h[r].value;n!==E&&(x(t),O(n),null!=d&&g(d,n))},D=function(e){var t,r=null;switch(e.key){case"ArrowRight":var n=T.indexOf(e.currentTarget)+1;r=T[n]||T[0];break;case"ArrowLeft":var a=T.indexOf(e.currentTarget)-1;r=T[a]||T[T.length-1]}null==(t=r)||t.focus()};return a.createElement("div",{className:"tabs-container"},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,u.Z)("tabs",{"tabs--block":l},f)},h.map((function(e){var t=e.value,r=e.label;return a.createElement("li",{role:"tab",tabIndex:E===t?0:-1,"aria-selected":E===t,className:(0,u.Z)("tabs__item",c,{"tabs__item--active":E===t}),key:t,ref:function(e){return T.push(e)},onKeyDown:D,onFocus:j,onClick:j},null!=r?r:t)}))),o?(0,a.cloneElement)(v.filter((function(e){return e.props.value===E}))[0],{className:"margin-vert--md"}):a.createElement("div",{className:"margin-vert--md"},v.map((function(e,t){return(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==E})}))))}function m(e){var t=(0,o.Z)();return a.createElement(p,(0,n.Z)({key:String(t)},e))}},2713:function(e,t,r){var n=(0,r(7294).createContext)(void 0);t.Z=n},2193:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return i},contentTitle:function(){return s},metadata:function(){return u},toc:function(){return c},default:function(){return m}});var n=r(7462),a=r(3366),o=(r(7294),r(4137)),l=(r(7225),r(8448),["components"]),i={id:"wdio-performancetotal-service",title:"PerformanceTotal Service",custom_edit_url:"https://github.com/tzurp/performance-total/edit/master//README.md"},s=void 0,u={unversionedId:"wdio-performancetotal-service",id:"wdio-performancetotal-service",isDocsHomePage:!1,title:"PerformanceTotal Service",description:"wdio-performancetotal-service is a 3rd party package, for more information please see GitHub | npm",source:"@site/docs/_wdio-performancetotal-service.md",sourceDirName:".",slug:"/wdio-performancetotal-service",permalink:"/docs/wdio-performancetotal-service",editUrl:"https://github.com/tzurp/performance-total/edit/master//README.md",tags:[],version:"current",frontMatter:{id:"wdio-performancetotal-service",title:"PerformanceTotal Service",custom_edit_url:"https://github.com/tzurp/performance-total/edit/master//README.md"},sidebar:"docs",previous:{title:"ywinappdriver Service",permalink:"/docs/wdio-ywinappdriver-service"},next:{title:"CleanupTotal Service",permalink:"/docs/wdio-cleanuptotal-service"}},c=[],p={toc:c};function m(e){var t=e.components,r=(0,a.Z)(e,l);return(0,o.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"wdio-performancetotal-service is a 3rd party package, for more information please see ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/tzurp/performance-total"},"GitHub")," | ",(0,o.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/wdio-performancetotal-service"},"npm"),"\nNote:",(0,o.kt)("br",null),"\nFor WebdriverIO v7 use version 2.x.x.",(0,o.kt)("br",null),"\nFor WebdriverIO v6 use version 1.x.x.")),(0,o.kt)("hr",null),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://github.com/tzurp/performance-total/blob/master/resources/chart.png",alt:"chart"})),(0,o.kt)("p",null,"With this plugin for ",(0,o.kt)("a",{parentName:"p",href:"https://webdriver.io/"},"webdriver.io")," you can easily add performance analysis to any flow in your tests."),(0,o.kt)("h2",null,"Installation"),"The easiest way to install this module as a (dev-)dependency is by using the following command:",(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"npm install wdio-performancetotal-service --save\n")),(0,o.kt)("p",null,"Or:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"npm install wdio-performancetotal-service --save-dev\n")),(0,o.kt)("h2",null,"Usage"),(0,o.kt)("p",null,"Add wdio-performancetotal-service to your ",(0,o.kt)("inlineCode",{parentName:"p"},"wdio.conf.js"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"exports.config = {\n  // ...\n  services: ['performancetotal']\n  // ...\n};\n")),(0,o.kt)("p",null,"...or with the service options:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'exports.config = {\n  // ...\n  services: [\n      [\'performancetotal\',\n      // The options (with default values)\n        {\n            disableAppendToExistingFile: false,\n            performanceResultsFileName: "performance-results",\n            dropResultsFromFailedTest: false,\n            performanceResultsDirectory: "performance-results",\n            analyzeByBrowser: false\n        }]\n      ]\n  // ...\n};\n')),(0,o.kt)("h2",null,"Options"),(0,o.kt)("h3",null,"disableAppendToExistingFile"),(0,o.kt)("p",null,"When set to ",(0,o.kt)("inlineCode",{parentName:"p"},"true"),", new test runs or tests from another spec file will overwrite any existing performance data.\nWhen set to ",(0,o.kt)("inlineCode",{parentName:"p"},"false")," (default), performance data will be added to the existing data."),(0,o.kt)("h3",null,"performanceResultsFileName"),(0,o.kt)("p",null,"You can set the default results file name (",(0,o.kt)("inlineCode",{parentName:"p"},"performance-results"),").\nA newly created results file normally overwrites the old file. If you want to keep old files, it is recommended to add a timestamp to the file name. For example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"...\nperformanceResultsFileName: `performance-results_${new Date().getTime()}`\n...\n")),(0,o.kt)("h3",null,"dropResultsFromFailedTest"),(0,o.kt)("p",null,"Default is ",(0,o.kt)("inlineCode",{parentName:"p"},"false"),". When the value is set to ",(0,o.kt)("inlineCode",{parentName:"p"},"true"),", performance analysis from failed tests would be excluded."),(0,o.kt)("h3",null,"performanceResultsDirectory"),"You can override the default path for the results directory in the project's root dir. For example:",(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'...\nperformanceResultsFileName: "results-dir/performance-total-results"\n...\n')),(0,o.kt)("h3",null,"analyzeByBrowser"),"Default is `false`. If true, the performance data would be grouped also by the browser type.",(0,o.kt)("h2",null,"Usage in test"),(0,o.kt)("p",null,"Just import ",(0,o.kt)("b",null,"performancetotal")," where you need it, whether it be your test file or any other class:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'import { performancetotal } from "wdio-performancetotal-service";\n\nit("should test github startup performance", () => {\n            // ...\n            performancetotal.sampleStart("Startup");\n            \n            browser.url("https://github.com/");\n            \n            performancetotal.sampleEnd("Startup");\n            //...\n        });\n')),(0,o.kt)("h2",null,"Getting the results"),(0,o.kt)("p",null,"A new results directory (the default directory name is ",(0,o.kt)("inlineCode",{parentName:"p"},"performance-results"),") is created in your project's root folder and when all the tests are completed two files are created inside it: ",(0,o.kt)("inlineCode",{parentName:"p"},"performance-results.json")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"performance-results.csv"),". The analyzed data includes: average time, standard error of mean(sem), number of samples, min value, max value, earliest time and latest time."),(0,o.kt)("h2",null,"Typescript support"),(0,o.kt)("p",null,"Typescript is supported for this plugin."))}m.isMDXComponent=!0}}]);