"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3149],{4137:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i=r.createContext({}),c=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(i.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=c(n),m=o,k=p["".concat(i,".").concat(m)]||p[m]||d[m]||a;return n?r.createElement(k,s(s({ref:t},u),{},{components:n})):r.createElement(k,s({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,s=new Array(a);s[0]=p;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:o,s[1]=l;for(var c=2;c<a;c++)s[c]=n[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},8448:function(e,t,n){var r=n(7294);t.Z=function(e){var t=e.children,n=e.hidden,o=e.className;return r.createElement("div",{role:"tabpanel",hidden:n,className:o},t)}},7225:function(e,t,n){n.d(t,{Z:function(){return p}});var r=n(7462),o=n(7294),a=n(1048),s=n(2713);var l=function(){var e=(0,o.useContext)(s.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},i=n(3309),c=n(6010),u="tabItem_vU9c";function d(e){var t,n,r,a=e.lazy,s=e.block,d=e.defaultValue,p=e.values,m=e.groupId,k=e.className,h=o.Children.map(e.children,(function(e){if((0,o.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),b=null!=p?p:h.map((function(e){var t=e.props;return{value:t.value,label:t.label}})),f=(0,i.lx)(b,(function(e,t){return e.value===t.value}));if(f.length>0)throw new Error('Docusaurus error: Duplicate values "'+f.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var v=null===d?d:null!=(t=null!=d?d:null==(n=h.find((function(e){return e.props.default})))?void 0:n.props.value)?t:null==(r=h[0])?void 0:r.props.value;if(null!==v&&!b.some((function(e){return e.value===v})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+v+'" but none of its children has the corresponding value. Available values are: '+b.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var g=l(),y=g.tabGroupChoices,w=g.setTabGroupChoices,N=(0,o.useState)(v),x=N[0],j=N[1],C=[],O=(0,i.o5)().blockElementScrollPositionUntilNextRender;if(null!=m){var T=y[m];null!=T&&T!==x&&b.some((function(e){return e.value===T}))&&j(T)}var M=function(e){var t=e.currentTarget,n=C.indexOf(t),r=b[n].value;r!==x&&(O(t),j(r),null!=m&&w(m,r))},E=function(e){var t,n=null;switch(e.key){case"ArrowRight":var r=C.indexOf(e.currentTarget)+1;n=C[r]||C[0];break;case"ArrowLeft":var o=C.indexOf(e.currentTarget)-1;n=C[o]||C[C.length-1]}null==(t=n)||t.focus()};return o.createElement("div",{className:"tabs-container"},o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,c.Z)("tabs",{"tabs--block":s},k)},b.map((function(e){var t=e.value,n=e.label;return o.createElement("li",{role:"tab",tabIndex:x===t?0:-1,"aria-selected":x===t,className:(0,c.Z)("tabs__item",u,{"tabs__item--active":x===t}),key:t,ref:function(e){return C.push(e)},onKeyDown:E,onFocus:M,onClick:M},null!=n?n:t)}))),a?(0,o.cloneElement)(h.filter((function(e){return e.props.value===x}))[0],{className:"margin-vert--md"}):o.createElement("div",{className:"margin-vert--md"},h.map((function(e,t){return(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==x})}))))}function p(e){var t=(0,a.Z)();return o.createElement(d,(0,r.Z)({key:String(t)},e))}},2713:function(e,t,n){var r=(0,n(7294).createContext)(void 0);t.Z=r},3211:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return c},contentTitle:function(){return u},metadata:function(){return d},toc:function(){return p},default:function(){return k}});var r=n(7462),o=n(3366),a=(n(7294),n(4137)),s=n(7225),l=n(8448),i=["components"],c={id:"mock",title:"mock",custom_edit_url:"https://github.com/Abhi6722/hackers-hub/edit/main/packages/webdriverio/src/commands/browser/mock.ts"},u=void 0,d={unversionedId:"api/browser/mock",id:"api/browser/mock",isDocsHomePage:!1,title:"mock",description:"Mock the response of a request. You can define a mock based on a matching",source:"@site/docs/api/browser/_mock.md",sourceDirName:"api/browser",slug:"/api/browser/mock",permalink:"/docs/api/browser/mock",editUrl:"https://github.com/Abhi6722/hackers-hub/edit/main/packages/webdriverio/src/commands/browser/mock.ts",tags:[],version:"current",frontMatter:{id:"mock",title:"mock",custom_edit_url:"https://github.com/Abhi6722/hackers-hub/edit/main/packages/webdriverio/src/commands/browser/mock.ts"},sidebar:"api",previous:{title:"keys",permalink:"/docs/api/browser/keys"},next:{title:"mockClearAll",permalink:"/docs/api/browser/mockClearAll"}},p=[{value:"Usage",id:"usage",children:[],level:5},{value:"Parameters",id:"parameters",children:[],level:5},{value:"Example",id:"example",children:[],level:5}],m={toc:p};function k(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Mock the response of a request. You can define a mock based on a matching\nglob and corresponding header and status code. Calling the mock method\nreturns a stub object that you can use to modify the response of the\nweb resource."),(0,a.kt)("p",null,"With the stub object you can then either return a custom response or\nhave the request fail."),(0,a.kt)("p",null,"There are 3 ways to modify the response:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"return a custom JSON object (for stubbing API request)"),(0,a.kt)("li",{parentName:"ul"},"replace web resource with a local file (service a modified JavaScript file) or"),(0,a.kt)("li",{parentName:"ul"},"redirect resource to a different url")),(0,a.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"Note that using the ",(0,a.kt)("inlineCode",{parentName:"p"},"mock")," command requires support for Chrome DevTools protocol and e.g.\ncan not be used when running automated tests in the cloud. Find out more in the\n",(0,a.kt)("a",{parentName:"p",href:"/docs/automationProtocols"},"Automation Protocols")," section."))),(0,a.kt)("h5",{id:"usage"},"Usage"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"browser.mock(url, { method, headers, responseHeaders, postData, statusCode })\n")),(0,a.kt)("h5",{id:"parameters"},"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Details"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,(0,a.kt)("var",null,"url"))),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"String"),", ",(0,a.kt)("code",null,"RegExp")),(0,a.kt)("td",{parentName:"tr",align:null},"url to mock")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,(0,a.kt)("var",null,"filterOptions")),(0,a.kt)("br",null),(0,a.kt)("span",{class:"label labelWarning"},"optional")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"MockFilterOptions")),(0,a.kt)("td",{parentName:"tr",align:null},"filter mock resource by additional options")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,(0,a.kt)("var",null,"filterOptions.method")),(0,a.kt)("br",null),(0,a.kt)("span",{class:"label labelWarning"},"optional")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"String"),", ",(0,a.kt)("code",null,"Function")),(0,a.kt)("td",{parentName:"tr",align:null},"filter resource by HTTP method")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,(0,a.kt)("var",null,"filterOptions.headers")),(0,a.kt)("br",null),(0,a.kt)("span",{class:"label labelWarning"},"optional")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"Object"),", ",(0,a.kt)("code",null,"Function")),(0,a.kt)("td",{parentName:"tr",align:null},"filter resource by specific request headers")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,(0,a.kt)("var",null,"filterOptions.responseHeaders")),(0,a.kt)("br",null),(0,a.kt)("span",{class:"label labelWarning"},"optional")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"Object"),", ",(0,a.kt)("code",null,"Function")),(0,a.kt)("td",{parentName:"tr",align:null},"filter resource by specific response headers")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,(0,a.kt)("var",null,"filterOptions.postData")),(0,a.kt)("br",null),(0,a.kt)("span",{class:"label labelWarning"},"optional")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"String"),", ",(0,a.kt)("code",null,"Function")),(0,a.kt)("td",{parentName:"tr",align:null},"filter resource by request postData")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,(0,a.kt)("var",null,"filterOptions.statusCode")),(0,a.kt)("br",null),(0,a.kt)("span",{class:"label labelWarning"},"optional")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"Number"),", ",(0,a.kt)("code",null,"Function")),(0,a.kt)("td",{parentName:"tr",align:null},"filter resource by response statusCode")))),(0,a.kt)("h5",{id:"example"},"Example"),(0,a.kt)(s.Z,{defaultValue:"async",className:"runtime",values:[{label:"Asynchronous Mode",value:"async"},{label:"Synchronous Mode",value:"sync"}],mdxType:"Tabs"},(0,a.kt)(l.Z,{value:"async",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="mock.js"',title:'"mock.js"'},"it('should mock network resources', async () => {\n    // via static string\n    const userListMock = await browser.mock('**' + '/users/list')\n    // or as regular expression\n    const userListMock = await browser.mock(/https:\\/\\/(domainA|domainB)\\.com\\/.+/)\n    // you can also specifying the mock even more by filtering resources\n    // by request or response headers, status code, postData, e.g. mock only responses with specific\n    // header set and statusCode\n    const strictMock = await browser.mock('**', {\n        // mock all json responses\n        statusCode: 200,\n        headers: { 'Content-Type': 'application/json' },\n        responseHeaders: { 'Cache-Control': 'no-cache' },\n        postData: 'foobar'\n    })\n\n    // comparator function\n    const apiV1Mock = await browser.mock('**' + '/api/v1', {\n        statusCode: (statusCode) => statusCode >= 200 && statusCode <= 203,\n        headers: (headers) => headers['Authorization'] && headers['Authorization'].startsWith('Bearer '),\n        responseHeaders: (headers) => headers['Impersonation'],\n        postData: (data) => typeof data === 'string' && data.includes('foo')\n    })\n})\n\nit('should modify API responses', async () => {\n    // filter by method\n    const todoMock = await browser.mock('**' + '/todos', {\n        method: 'get'\n    })\n\n    // mock an endpoint with a fixed fixture\n    mock.respond([{\n        title: 'Injected Todo',\n        order: null,\n        completed: false,\n        url: \"http://todo-backend-express-knex.herokuapp.com/916\"\n    }])\n\n    // respond with different status code or header\n    mock.respond([{\n        title: 'Injected Todo',\n        order: null,\n        completed: false,\n        url: \"http://todo-backend-express-knex.herokuapp.com/916\"\n    }], {\n        statusCode: 404,\n        headers: {\n            'x-custom-header': 'foobar'\n        }\n    })\n})\n\nit('should modify text assets', async () => {\n    const scriptMock = await browser.mock('**' + '/script.min.js')\n    scriptMock.respond('./tests/fixtures/script.js')\n})\n\nit('should redirect web resources', async () => {\n    const headerMock = await browser.mock('**' + '/header.png')\n    headerMock.respond('https://media.giphy.com/media/F9hQLAVhWnL56/giphy.gif')\n\n    const pageMock = await browser.mock('https://google.com/')\n    pageMock.respond('https://webdriver.io')\n    await browser.url('https://google.com')\n    console.log(await browser.getTitle()) // returns \"WebdriverIO \xb7 Next-gen browser and mobile automation test framework for Node.js\"\n})\n"))),(0,a.kt)(l.Z,{value:"sync",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="mock.js"',title:'"mock.js"'},"it('should mock network resources', () => {\n    // via static string\n    const userListMock = browser.mock('**' + '/users/list')\n    // or as regular expression\n    const userListMock = browser.mock(/https:\\/\\/(domainA|domainB)\\.com\\/.+/)\n    // you can also specifying the mock even more by filtering resources\n    // by request or response headers, status code, postData, e.g. mock only responses with specific\n    // header set and statusCode\n    const strictMock = browser.mock('**', {\n        // mock all json responses\n        statusCode: 200,\n        headers: { 'Content-Type': 'application/json' },\n        responseHeaders: { 'Cache-Control': 'no-cache' },\n        postData: 'foobar'\n    })\n\n    // comparator function\n    const apiV1Mock = browser.mock('**' + '/api/v1', {\n        statusCode: (statusCode) => statusCode >= 200 && statusCode <= 203,\n        headers: (headers) => headers['Authorization'] && headers['Authorization'].startsWith('Bearer '),\n        responseHeaders: (headers) => headers['Impersonation'],\n        postData: (data) => typeof data === 'string' && data.includes('foo')\n    })\n})\n\nit('should modify API responses', () => {\n    // filter by method\n    const todoMock = browser.mock('**' + '/todos', {\n        method: 'get'\n    })\n\n    // mock an endpoint with a fixed fixture\n    mock.respond([{\n        title: 'Injected Todo',\n        order: null,\n        completed: false,\n        url: \"http://todo-backend-express-knex.herokuapp.com/916\"\n    }])\n\n    // respond with different status code or header\n    mock.respond([{\n        title: 'Injected Todo',\n        order: null,\n        completed: false,\n        url: \"http://todo-backend-express-knex.herokuapp.com/916\"\n    }], {\n        statusCode: 404,\n        headers: {\n            'x-custom-header': 'foobar'\n        }\n    })\n})\n\nit('should modify text assets', () => {\n    const scriptMock = browser.mock('**' + '/script.min.js')\n    scriptMock.respond('./tests/fixtures/script.js')\n})\n\nit('should redirect web resources', () => {\n    const headerMock = browser.mock('**' + '/header.png')\n    headerMock.respond('https://media.giphy.com/media/F9hQLAVhWnL56/giphy.gif')\n\n    const pageMock = browser.mock('https://google.com/')\n    pageMock.respond('https://webdriver.io')\n    browser.url('https://google.com')\n    console.log(browser.getTitle()) // returns \"WebdriverIO \xb7 Next-gen browser and mobile automation test framework for Node.js\"\n})\n")),(0,a.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"Synchronous Mode will depcrecated with Node.js v16. With an update to the\nunderlying Chromium version it became technically impossible to provide the\nsame synchronous behavior. We recommend to start transition to asynchronous\ncommand execution. For more information, see our ",(0,a.kt)("a",{href:"https://github.com/webdriverio/webdriverio/discussions/6702"},"RFC"),"."))))))}k.isMDXComponent=!0}}]);