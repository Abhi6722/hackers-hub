"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4530],{4137:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return h}});var i=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,i,o=function(e,t){if(null==e)return{};var n,i,o={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=i.createContext({}),c=function(e){var t=i.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},u=function(e){var t=c(e.components);return i.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},d=i.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=c(n),h=o,m=d["".concat(l,".").concat(h)]||d[h]||p[h]||a;return n?i.createElement(m,r(r({ref:t},u),{},{components:n})):i.createElement(m,r({ref:t},u))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,r=new Array(a);r[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,r[1]=s;for(var c=2;c<a;c++)r[c]=n[c];return i.createElement.apply(null,r)}return i.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9339:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return u},default:function(){return d}});var i=n(7462),o=n(3366),a=(n(7294),n(4137)),r=["components"],s={id:"cloudservices",title:"Using Cloud Services"},l=void 0,c={unversionedId:"cloudservices",id:"cloudservices",isDocsHomePage:!1,title:"Using Cloud Services",description:"Using on-demand services like Sauce Labs, Browserstack, TestingBot, CrossBrowserTesting or LambdaTest with WebdriverIO is pretty simple. All you need to do is to set your service's user and key in your options.",source:"@site/docs/CloudServices.md",sourceDirName:".",slug:"/cloudservices",permalink:"/docs/cloudservices",editUrl:"https://github.com/Abhi6722/hackers-hub/edit/main/website/docs/CloudServices.md",tags:[],version:"current",frontMatter:{id:"cloudservices",title:"Using Cloud Services"},sidebar:"docs",previous:{title:"From Sync to Async",permalink:"/docs/async-migration"},next:{title:"Autocompletion",permalink:"/docs/autocompletion"}},u=[{value:"Sauce Labs",id:"sauce-labs",children:[{value:"Sauce Connect",id:"sauce-connect",children:[],level:3},{value:"With Travis CI",id:"with-travis-ci",children:[],level:3},{value:"Timeouts",id:"timeouts",children:[],level:3}],level:2},{value:"BrowserStack",id:"browserstack",children:[{value:"Local Testing",id:"local-testing",children:[],level:3},{value:"With Travis CI",id:"with-travis-ci-1",children:[],level:3}],level:2},{value:"TestingBot",id:"testingbot",children:[{value:"Local Testing",id:"local-testing-1",children:[],level:3}],level:2},{value:"CrossBrowserTesting",id:"crossbrowsertesting",children:[{value:"Local Testing",id:"local-testing-2",children:[],level:3}],level:2},{value:"LambdaTest",id:"lambdatest",children:[{value:"Tunnel for local testing",id:"tunnel-for-local-testing",children:[],level:3},{value:"With Travis CI",id:"with-travis-ci-2",children:[],level:3}],level:2}],p={toc:u};function d(e){var t=e.components,n=(0,o.Z)(e,r);return(0,a.kt)("wrapper",(0,i.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Using on-demand services like Sauce Labs, Browserstack, TestingBot, CrossBrowserTesting or LambdaTest with WebdriverIO is pretty simple. All you need to do is to set your service's ",(0,a.kt)("inlineCode",{parentName:"p"},"user")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"key")," in your options."),(0,a.kt)("p",null,"Optionally, you can also parametrize your test by setting cloud-specific capabilities like ",(0,a.kt)("inlineCode",{parentName:"p"},"build"),". If you only want to run cloud services in Travis, you can use the ",(0,a.kt)("inlineCode",{parentName:"p"},"CI")," environment variable to check if you are in Travis and modify the config accordingly."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"// wdio.conf.js\n\nlet config = {...}\nif (process.env.CI) {\n    config.user = process.env.SAUCE_USERNAME\n    config.key = process.env.SAUCE_ACCESS_KEY\n}\nexports.config = config\n")),(0,a.kt)("h2",{id:"sauce-labs"},"Sauce Labs"),(0,a.kt)("p",null,"It is easy to set up your tests to run remotely in ",(0,a.kt)("a",{parentName:"p",href:"https://saucelabs.com"},"Sauce Labs"),"."),(0,a.kt)("p",null,"The only requirement is to set the ",(0,a.kt)("inlineCode",{parentName:"p"},"user")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"key")," in your config (either exported by ",(0,a.kt)("inlineCode",{parentName:"p"},"wdio.conf.js")," or passed into ",(0,a.kt)("inlineCode",{parentName:"p"},"webdriverio.remote(...)"),") to your Sauce Labs username and access key."),(0,a.kt)("p",null,"You can also pass in any optional ",(0,a.kt)("a",{parentName:"p",href:"https://docs.saucelabs.com/dev/test-configuration-options/"},"test configuration option")," as a key/value in the capabilities for any browser."),(0,a.kt)("h3",{id:"sauce-connect"},"Sauce Connect"),(0,a.kt)("p",null,"If you want to run tests against a server that is not accessible to the Internet (like on ",(0,a.kt)("inlineCode",{parentName:"p"},"localhost"),"), then you need to use ",(0,a.kt)("a",{parentName:"p",href:"https://wiki.saucelabs.com/display/DOCS/Sauce+Connect+Proxy"},"Sauce Connect"),"."),(0,a.kt)("p",null,"It is out of the scope of WebdriverIO to support this, so you'll have to start it by yourself."),(0,a.kt)("p",null,"If you are using the WDIO testrunner download and configure the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/webdriverio/webdriverio/tree/main/packages/wdio-sauce-service"},(0,a.kt)("inlineCode",{parentName:"a"},"@wdio/sauce-service"))," in your ",(0,a.kt)("inlineCode",{parentName:"p"},"wdio.conf.js"),". It helps getting Sauce Connect running and comes with additional features that better integrate your tests into the Sauce service."),(0,a.kt)("h3",{id:"with-travis-ci"},"With Travis CI"),(0,a.kt)("p",null,"Travis CI, however, does ",(0,a.kt)("a",{parentName:"p",href:"http://docs.travis-ci.com/user/sauce-connect/#Setting-up-Sauce-Connect"},"have support")," for starting Sauce Connect before each test, so following their directions for that is an option."),(0,a.kt)("p",null,"If you do so, you must set the ",(0,a.kt)("inlineCode",{parentName:"p"},"tunnel-identifier")," test configuration option in each browser's ",(0,a.kt)("inlineCode",{parentName:"p"},"capabilities"),". Travis sets this to the ",(0,a.kt)("inlineCode",{parentName:"p"},"TRAVIS_JOB_NUMBER")," environmental variable by default."),(0,a.kt)("p",null,"Also, if you want to have Sauce Labs group your tests by build number, you can set the ",(0,a.kt)("inlineCode",{parentName:"p"},"build")," to ",(0,a.kt)("inlineCode",{parentName:"p"},"TRAVIS_BUILD_NUMBER"),"."),(0,a.kt)("p",null,"Lastly, if you set ",(0,a.kt)("inlineCode",{parentName:"p"},"name"),", this changes the name of this test in Sauce Labs for this build. If you are using the WDIO testrunner combined with the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/webdriverio/webdriverio/tree/main/packages/wdio-sauce-service"},(0,a.kt)("inlineCode",{parentName:"a"},"@wdio/sauce-service")),", WebdriverIO automatically sets a proper name for the test."),(0,a.kt)("p",null,"Example ",(0,a.kt)("inlineCode",{parentName:"p"},"capabilities"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"browserName: 'chrome',\nversion: '27.0',\nplatform: 'XP',\n'tunnel-identifier': process.env.TRAVIS_JOB_NUMBER,\nname: 'integration',\nbuild: process.env.TRAVIS_BUILD_NUMBER\n")),(0,a.kt)("h3",{id:"timeouts"},"Timeouts"),(0,a.kt)("p",null,"Since you are running your tests remotely, it might be necessary to increase some timeouts."),(0,a.kt)("p",null,"You can change the ",(0,a.kt)("a",{parentName:"p",href:"https://docs.saucelabs.com/dev/test-configuration-options/#idletimeout"},"idle timeout")," by passing ",(0,a.kt)("inlineCode",{parentName:"p"},"idle-timeout")," as a test configuration option. This controls how long Sauce will wait between commands before closing the connection."),(0,a.kt)("h2",{id:"browserstack"},"BrowserStack"),(0,a.kt)("p",null,"WebdriverIO also has a ",(0,a.kt)("a",{parentName:"p",href:"https://www.browserstack.com"},"Browserstack")," integration built-in."),(0,a.kt)("p",null,"The only requirement is to set the ",(0,a.kt)("inlineCode",{parentName:"p"},"user")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"key")," in your config (either exported by ",(0,a.kt)("inlineCode",{parentName:"p"},"wdio.conf.js")," or passed into ",(0,a.kt)("inlineCode",{parentName:"p"},"webdriverio.remote(...)"),") to your Browserstack automate username and access key."),(0,a.kt)("p",null,"You can also pass in any optional ",(0,a.kt)("a",{parentName:"p",href:"https://www.browserstack.com/automate/capabilities"},"supported capabilities")," as a key/value in the capabilities for any browser. If you set ",(0,a.kt)("inlineCode",{parentName:"p"},"browserstack.debug")," to ",(0,a.kt)("inlineCode",{parentName:"p"},"true")," it will record a screencast of the session, which might be helpful."),(0,a.kt)("h3",{id:"local-testing"},"Local Testing"),(0,a.kt)("p",null,"If you want to run tests against a server that is not accessible to the Internet (like on ",(0,a.kt)("inlineCode",{parentName:"p"},"localhost"),"), then you need to use ",(0,a.kt)("a",{parentName:"p",href:"https://www.browserstack.com/local-testing#command-line"},"Local Testing"),"."),(0,a.kt)("p",null,"It is out of the scope of WebdriverIO to support this, so you must start it by yourself."),(0,a.kt)("p",null,"If you do use local, you should set ",(0,a.kt)("inlineCode",{parentName:"p"},"browserstack.local")," to ",(0,a.kt)("inlineCode",{parentName:"p"},"true")," in your capabilities."),(0,a.kt)("p",null,"If you are using the WDIO testrunner, download and configure the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/webdriverio/webdriverio/tree/master/packages/wdio-browserstack-service"},(0,a.kt)("inlineCode",{parentName:"a"},"@wdio/browserstack-service"))," in your ",(0,a.kt)("inlineCode",{parentName:"p"},"wdio.conf.js"),". It helps get BrowserStack running, and comes with additional features that better integrate your tests into the BrowserStack service."),(0,a.kt)("h3",{id:"with-travis-ci-1"},"With Travis CI"),(0,a.kt)("p",null,"If you want to add Local Testing in Travis, you have to start it by yourself."),(0,a.kt)("p",null,"The following script will download and start it in the background. You should run this in Travis before starting the tests."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"wget https://www.browserstack.com/browserstack-local/BrowserStackLocal-linux-x64.zip\nunzip BrowserStackLocal-linux-x64.zip\n./BrowserStackLocal -v -onlyAutomate -forcelocal $BROWSERSTACK_ACCESS_KEY &\nsleep 3\n")),(0,a.kt)("p",null,"Also, you might wish set the ",(0,a.kt)("inlineCode",{parentName:"p"},"build")," to the Travis build number."),(0,a.kt)("p",null,"Example ",(0,a.kt)("inlineCode",{parentName:"p"},"capabilities"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"browserName: 'chrome',\nproject: 'myApp',\nversion: '44.0',\nbuild: `myApp #${process.env.TRAVIS_BUILD_NUMBER}.${process.env.TRAVIS_JOB_NUMBER}`,\n'browserstack.local': 'true',\n'browserstack.debug': 'true'\n")),(0,a.kt)("h2",{id:"testingbot"},"TestingBot"),(0,a.kt)("p",null,"The only requirement is to set the ",(0,a.kt)("inlineCode",{parentName:"p"},"user")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"key")," in your config (either exported by ",(0,a.kt)("inlineCode",{parentName:"p"},"wdio.conf.js")," or passed into ",(0,a.kt)("inlineCode",{parentName:"p"},"webdriverio.remote(...)"),") to your ",(0,a.kt)("a",{parentName:"p",href:"https://testingbot.com"},"TestingBot")," username and secret key."),(0,a.kt)("p",null,"You can also pass in any optional ",(0,a.kt)("a",{parentName:"p",href:"https://testingbot.com/support/other/test-options"},"supported capabilities")," as a key/value in the capabilities for any browser."),(0,a.kt)("h3",{id:"local-testing-1"},"Local Testing"),(0,a.kt)("p",null,"If you want to run tests against a server that is not accessible to the Internet (like on ",(0,a.kt)("inlineCode",{parentName:"p"},"localhost"),"), then you need to use ",(0,a.kt)("a",{parentName:"p",href:"https://testingbot.com/support/other/tunnel"},"Local Testing"),". TestingBot provides a Java-based tunnel to allow you to test websites not accessible from the internet."),(0,a.kt)("p",null,"Their tunnel support page contains the information necessary to get this up and running."),(0,a.kt)("p",null,"If you are using the WDIO testrunner, download and configure the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/webdriverio/webdriverio/tree/main/packages/wdio-testingbot-service"},(0,a.kt)("inlineCode",{parentName:"a"},"@wdio/testingbot-service"))," in your ",(0,a.kt)("inlineCode",{parentName:"p"},"wdio.conf.js"),". It helps get TestingBot running, and comes with additional features that better integrate your tests into the TestingBot service."),(0,a.kt)("h2",{id:"crossbrowsertesting"},"CrossBrowserTesting"),(0,a.kt)("p",null,"The only requirement is to set the ",(0,a.kt)("inlineCode",{parentName:"p"},"user"),"\xa0and ",(0,a.kt)("inlineCode",{parentName:"p"},"key")," in your config (either exported by ",(0,a.kt)("inlineCode",{parentName:"p"},"wdio.conf.js")," or passed into ",(0,a.kt)("inlineCode",{parentName:"p"},"webdriverio.remote(...)"),") to your ",(0,a.kt)("a",{parentName:"p",href:"https://crossbrowsertesting.com/"},"CrossBrowserTesting")," username and authkey."),(0,a.kt)("p",null,"You can also pass in any optional ",(0,a.kt)("a",{parentName:"p",href:"https://help.crossbrowsertesting.com/selenium-testing/getting-started/crossbrowsertesting-automation-capabilities/"},"supported capabilities")," as a key/value in the capabilities for any browser."),(0,a.kt)("h3",{id:"local-testing-2"},"Local Testing"),(0,a.kt)("p",null,"If you want to run tests against a server that is not accessible to the Internet (like on ",(0,a.kt)("inlineCode",{parentName:"p"},"localhost"),"), then you need to use ",(0,a.kt)("a",{parentName:"p",href:"https://help.crossbrowsertesting.com/local-connection/general/local-tunnel-overview/"},"Local Testing"),". CrossBrowserTesting provides a tunnel to allow you to test websites not accessible from the internet."),(0,a.kt)("p",null,"If you are using the WDIO testrunner, download and configure the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/webdriverio/webdriverio/tree/main/packages/wdio-crossbrowsertesting-service"},(0,a.kt)("inlineCode",{parentName:"a"},"@wdio/crossbrowsertesting-service"))," in your ",(0,a.kt)("inlineCode",{parentName:"p"},"wdio.conf.js"),". It helps get CrossBrowserTesting running and comes with additional features that better integrate your tests into the CrossBrowserTesting service."),(0,a.kt)("h2",{id:"lambdatest"},"LambdaTest"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://www.lambdatest.com"},"LambdaTest")," integration is also built-in."),(0,a.kt)("p",null,"The only requirement is to set the ",(0,a.kt)("inlineCode",{parentName:"p"},"user")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"key")," in your config (either exported by ",(0,a.kt)("inlineCode",{parentName:"p"},"wdio.conf.js")," or passed into ",(0,a.kt)("inlineCode",{parentName:"p"},"webdriverio.remote(...)"),") to your LambdaTest account username and access key."),(0,a.kt)("p",null,"You can also pass in any optional ",(0,a.kt)("a",{parentName:"p",href:"https://www.lambdatest.com/capabilities-generator/"},"supported capabilities")," as a key/value in the capabilities for any browser. If you set ",(0,a.kt)("inlineCode",{parentName:"p"},"visual")," to ",(0,a.kt)("inlineCode",{parentName:"p"},"true")," it will record a screencast of the session, which might be helpful."),(0,a.kt)("h3",{id:"tunnel-for-local-testing"},"Tunnel for local testing"),(0,a.kt)("p",null,"If you want to run tests against a server that is not accessible to the Internet (like on ",(0,a.kt)("inlineCode",{parentName:"p"},"localhost"),"), then you need to use ",(0,a.kt)("a",{parentName:"p",href:"https://www.lambdatest.com/support/docs/testing-locally-hosted-pages/"},"Local Testing"),"."),(0,a.kt)("p",null,"It is out of the scope of WebdriverIO to support this, so you must start it by yourself."),(0,a.kt)("p",null,"If you do use local, you should set ",(0,a.kt)("inlineCode",{parentName:"p"},"tunnel")," to ",(0,a.kt)("inlineCode",{parentName:"p"},"true")," in your capabilities."),(0,a.kt)("p",null,"If you are using the WDIO testrunner, download and configure the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/LambdaTest/wdio-lambdatest-service"},(0,a.kt)("inlineCode",{parentName:"a"},"wdio-lambdatest-service"))," in your ",(0,a.kt)("inlineCode",{parentName:"p"},"wdio.conf.js"),". It helps get LambdaTest running, and comes with additional features that better integrate your tests into the LambdaTest service."),(0,a.kt)("h3",{id:"with-travis-ci-2"},"With Travis CI"),(0,a.kt)("p",null,"If you want to add Local Testing in Travis, you have to start it by yourself."),(0,a.kt)("p",null,"The following script will download and start it in the background. You should run this in Travis before starting the tests."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"wget http://downloads.lambdatest.com/tunnel/linux/64bit/LT_Linux.zip\nunzip LT_Linux.zip\n./LT -user $LT_USERNAME -key $LT_ACCESS_KEY -cui &\nsleep 3\n")),(0,a.kt)("p",null,"Also, you might wish set the ",(0,a.kt)("inlineCode",{parentName:"p"},"build")," to the Travis build number."),(0,a.kt)("p",null,"Example ",(0,a.kt)("inlineCode",{parentName:"p"},"capabilities"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"platform: 'Windows 10',\nbrowserName: 'chrome',\nversion: '79.0',\nbuild: `myApp #${process.env.TRAVIS_BUILD_NUMBER}.${process.env.TRAVIS_JOB_NUMBER}`,\n'tunnel': 'true',\n'visual': 'true'\n")))}d.isMDXComponent=!0}}]);